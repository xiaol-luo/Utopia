// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Battle.proto

#include "Battle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Battle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Battle_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ViewGrid;
}  // namespace protobuf_Battle_2eproto
namespace protobuf_Common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBVector2;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBVector3;
}  // namespace protobuf_Common_2eproto
namespace NetProto {
class RspFreeHeroDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspFreeHero>
      _instance;
} _RspFreeHero_default_instance_;
class SelectHeroReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectHeroReq>
      _instance;
} _SelectHeroReq_default_instance_;
class SelectHeroRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectHeroRsp>
      _instance;
} _SelectHeroRsp_default_instance_;
class SceneObjectDisappearDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneObjectDisappear>
      _instance;
} _SceneObjectDisappear_default_instance_;
class MoveToPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveToPos>
      _instance;
} _MoveToPos_default_instance_;
class BattleOperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BattleOperation>
      _instance;
} _BattleOperation_default_instance_;
class ViewGridDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ViewGrid>
      _instance;
} _ViewGrid_default_instance_;
class ViewSnapshotDiffDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ViewSnapshotDiff>
      _instance;
} _ViewSnapshotDiff_default_instance_;
class ViewSnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ViewSnapshot>
      _instance;
} _ViewSnapshot_default_instance_;
class ViewAllGridsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ViewAllGrids>
      _instance;
} _ViewAllGrids_default_instance_;
class SceneUnitStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneUnitState>
      _instance;
} _SceneUnitState_default_instance_;
class SceneUnitTransformDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneUnitTransform>
      _instance;
} _SceneUnitTransform_default_instance_;
class SceneUnitMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneUnitMove>
      _instance;
} _SceneUnitMove_default_instance_;
class SceneUnitSkillActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneUnitSkillAction>
      _instance;
} _SceneUnitSkillAction_default_instance_;
class SceneTimeSyncDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneTimeSync>
      _instance;
} _SceneTimeSync_default_instance_;
class BulletStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulletState>
      _instance;
} _BulletState_default_instance_;
class BulletTargetPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulletTargetPos>
      _instance;
} _BulletTargetPos_default_instance_;
}  // namespace NetProto
namespace protobuf_Battle_2eproto {
static void InitDefaultsRspFreeHero() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_RspFreeHero_default_instance_;
    new (ptr) ::NetProto::RspFreeHero();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::RspFreeHero::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspFreeHero =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspFreeHero}, {}};

static void InitDefaultsSelectHeroReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_SelectHeroReq_default_instance_;
    new (ptr) ::NetProto::SelectHeroReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::SelectHeroReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SelectHeroReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSelectHeroReq}, {}};

static void InitDefaultsSelectHeroRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_SelectHeroRsp_default_instance_;
    new (ptr) ::NetProto::SelectHeroRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::SelectHeroRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SelectHeroRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSelectHeroRsp}, {}};

static void InitDefaultsSceneObjectDisappear() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_SceneObjectDisappear_default_instance_;
    new (ptr) ::NetProto::SceneObjectDisappear();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::SceneObjectDisappear::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SceneObjectDisappear =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSceneObjectDisappear}, {}};

static void InitDefaultsMoveToPos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_MoveToPos_default_instance_;
    new (ptr) ::NetProto::MoveToPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::MoveToPos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoveToPos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoveToPos}, {
      &protobuf_Common_2eproto::scc_info_PBVector2.base,}};

static void InitDefaultsBattleOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_BattleOperation_default_instance_;
    new (ptr) ::NetProto::BattleOperation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::BattleOperation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BattleOperation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBattleOperation}, {
      &protobuf_Common_2eproto::scc_info_PBVector2.base,}};

static void InitDefaultsViewGrid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_ViewGrid_default_instance_;
    new (ptr) ::NetProto::ViewGrid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::ViewGrid::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ViewGrid =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsViewGrid}, {
      &protobuf_Common_2eproto::scc_info_PBVector2.base,}};

static void InitDefaultsViewSnapshotDiff() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_ViewSnapshotDiff_default_instance_;
    new (ptr) ::NetProto::ViewSnapshotDiff();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::ViewSnapshotDiff::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ViewSnapshotDiff =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsViewSnapshotDiff}, {}};

static void InitDefaultsViewSnapshot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_ViewSnapshot_default_instance_;
    new (ptr) ::NetProto::ViewSnapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::ViewSnapshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ViewSnapshot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsViewSnapshot}, {}};

static void InitDefaultsViewAllGrids() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_ViewAllGrids_default_instance_;
    new (ptr) ::NetProto::ViewAllGrids();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::ViewAllGrids::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ViewAllGrids =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsViewAllGrids}, {
      &protobuf_Battle_2eproto::scc_info_ViewGrid.base,}};

static void InitDefaultsSceneUnitState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_SceneUnitState_default_instance_;
    new (ptr) ::NetProto::SceneUnitState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::SceneUnitState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SceneUnitState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSceneUnitState}, {
      &protobuf_Common_2eproto::scc_info_PBVector3.base,}};

static void InitDefaultsSceneUnitTransform() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_SceneUnitTransform_default_instance_;
    new (ptr) ::NetProto::SceneUnitTransform();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::SceneUnitTransform::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SceneUnitTransform =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSceneUnitTransform}, {
      &protobuf_Common_2eproto::scc_info_PBVector3.base,}};

static void InitDefaultsSceneUnitMove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_SceneUnitMove_default_instance_;
    new (ptr) ::NetProto::SceneUnitMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::SceneUnitMove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SceneUnitMove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSceneUnitMove}, {
      &protobuf_Common_2eproto::scc_info_PBVector2.base,
      &protobuf_Common_2eproto::scc_info_PBVector3.base,}};

static void InitDefaultsSceneUnitSkillAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_SceneUnitSkillAction_default_instance_;
    new (ptr) ::NetProto::SceneUnitSkillAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::SceneUnitSkillAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SceneUnitSkillAction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSceneUnitSkillAction}, {}};

static void InitDefaultsSceneTimeSync() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_SceneTimeSync_default_instance_;
    new (ptr) ::NetProto::SceneTimeSync();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::SceneTimeSync::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SceneTimeSync =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSceneTimeSync}, {}};

static void InitDefaultsBulletState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_BulletState_default_instance_;
    new (ptr) ::NetProto::BulletState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::BulletState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BulletState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBulletState}, {
      &protobuf_Common_2eproto::scc_info_PBVector3.base,}};

static void InitDefaultsBulletTargetPos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_BulletTargetPos_default_instance_;
    new (ptr) ::NetProto::BulletTargetPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::BulletTargetPos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BulletTargetPos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBulletTargetPos}, {
      &protobuf_Common_2eproto::scc_info_PBVector3.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RspFreeHero.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SelectHeroReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SelectHeroRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneObjectDisappear.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveToPos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BattleOperation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ViewGrid.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ViewSnapshotDiff.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ViewSnapshot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ViewAllGrids.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneUnitState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneUnitTransform.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneUnitMove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneUnitSkillAction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneTimeSync.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulletState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulletTargetPos.base);
}

::google::protobuf::Metadata file_level_metadata[17];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::RspFreeHero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::RspFreeHero, red_hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::RspFreeHero, blue_hero_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SelectHeroReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SelectHeroReq, hero_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SelectHeroRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SelectHeroRsp, hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SelectHeroRsp, is_succ_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneObjectDisappear, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneObjectDisappear, objids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::MoveToPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::MoveToPos, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BattleOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BattleOperation, opera_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BattleOperation, target_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BattleOperation, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BattleOperation, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BattleOperation, skill_slot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewGrid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewGrid, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewGrid, grid_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewSnapshotDiff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewSnapshotDiff, more_grids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewSnapshotDiff, miss_grids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewSnapshot, light_grids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewAllGrids, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewAllGrids, grid_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewAllGrids, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewAllGrids, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::ViewAllGrids, grids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitState, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitState, unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitState, model_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitState, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitState, face_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitState, parent_su_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitTransform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitTransform, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitTransform, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitTransform, face_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitTransform, parent_su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitTransform, ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, move_agent_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, max_move_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, move_desired_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, move_desired_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, immobilized_end_timestamp_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, force_pos_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, force_pos_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, force_line_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, force_line_elasped_sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, force_line_total_sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, force_line_end_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, unit_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitMove, now_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitSkillAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitSkillAction, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitSkillAction, stage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitSkillAction, skill_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneUnitSkillAction, stage_begin_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneTimeSync, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneTimeSync, ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::SceneTimeSync, sec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletState, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletState, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletState, target_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletState, target_suid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletState, curr_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletState, unit_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletState, now_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletTargetPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletTargetPos, su_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletTargetPos, target_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletTargetPos, now_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::BulletTargetPos, unit_pos_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NetProto::RspFreeHero)},
  { 7, -1, sizeof(::NetProto::SelectHeroReq)},
  { 13, -1, sizeof(::NetProto::SelectHeroRsp)},
  { 20, -1, sizeof(::NetProto::SceneObjectDisappear)},
  { 26, -1, sizeof(::NetProto::MoveToPos)},
  { 32, -1, sizeof(::NetProto::BattleOperation)},
  { 42, -1, sizeof(::NetProto::ViewGrid)},
  { 49, -1, sizeof(::NetProto::ViewSnapshotDiff)},
  { 56, -1, sizeof(::NetProto::ViewSnapshot)},
  { 62, -1, sizeof(::NetProto::ViewAllGrids)},
  { 71, -1, sizeof(::NetProto::SceneUnitState)},
  { 82, -1, sizeof(::NetProto::SceneUnitTransform)},
  { 92, -1, sizeof(::NetProto::SceneUnitMove)},
  { 111, -1, sizeof(::NetProto::SceneUnitSkillAction)},
  { 120, -1, sizeof(::NetProto::SceneTimeSync)},
  { 127, -1, sizeof(::NetProto::BulletState)},
  { 139, -1, sizeof(::NetProto::BulletTargetPos)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_RspFreeHero_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_SelectHeroReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_SelectHeroRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_SceneObjectDisappear_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_MoveToPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_BattleOperation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_ViewGrid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_ViewSnapshotDiff_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_ViewSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_ViewAllGrids_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_SceneUnitState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_SceneUnitTransform_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_SceneUnitMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_SceneUnitSkillAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_SceneTimeSync_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_BulletState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_BulletTargetPos_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Battle.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Battle.proto\022\010NetProto\032\014Common.proto\032\020"
      "BattleEnum.proto\"8\n\013RspFreeHero\022\023\n\013red_h"
      "ero_id\030\001 \001(\004\022\024\n\014blue_hero_id\030\002 \001(\004\" \n\rSe"
      "lectHeroReq\022\017\n\007hero_id\030\001 \001(\004\"1\n\rSelectHe"
      "roRsp\022\017\n\007hero_id\030\001 \001(\004\022\017\n\007is_succ\030\002 \001(\010\""
      "&\n\024SceneObjectDisappear\022\016\n\006objids\030\001 \003(\004\""
      "-\n\tMoveToPos\022 \n\003pos\030\001 \001(\0132\023.NetProto.PBV"
      "ector2\"\244\001\n\017BattleOperation\022%\n\005opera\030\001 \001("
      "\0162\026.NetProto.EPlayerOpera\022\021\n\ttarget_id\030\002"
      " \001(\004\022\013\n\003dir\030\003 \001(\002\022 \n\003pos\030\004 \001(\0132\023.NetProt"
      "o.PBVector2\022(\n\nskill_slot\030\005 \001(\0162\024.NetPro"
      "to.ESkillSlot\"B\n\010ViewGrid\022#\n\006center\030\001 \001("
      "\0132\023.NetProto.PBVector2\022\021\n\tgrid_type\030\002 \001("
      "\005\":\n\020ViewSnapshotDiff\022\022\n\nmore_grids\030\001 \003("
      "\005\022\022\n\nmiss_grids\030\002 \003(\005\"#\n\014ViewSnapshot\022\023\n"
      "\013light_grids\030\001 \003(\005\"^\n\014ViewAllGrids\022\021\n\tgr"
      "id_size\030\001 \001(\002\022\013\n\003row\030\002 \001(\005\022\013\n\003col\030\003 \001(\005\022"
      "!\n\005grids\030\004 \003(\0132\022.NetProto.ViewGrid\"\250\001\n\016S"
      "ceneUnitState\022\r\n\005su_id\030\001 \001(\004\022+\n\tunit_typ"
      "e\030\002 \001(\0162\030.NetProto.ESceneUnitType\022\020\n\010mod"
      "el_id\030\003 \001(\005\022 \n\003pos\030\004 \001(\0132\023.NetProto.PBVe"
      "ctor3\022\020\n\010face_dir\030\005 \001(\002\022\024\n\014parent_su_id\030"
      "\006 \001(\004\"y\n\022SceneUnitTransform\022\r\n\005su_id\030\001 \001"
      "(\004\022 \n\003pos\030\002 \001(\0132\023.NetProto.PBVector3\022\020\n\010"
      "face_dir\030\003 \001(\002\022\024\n\014parent_su_id\030\004 \001(\004\022\n\n\002"
      "ms\030\005 \001(\003\"\377\003\n\rSceneUnitMove\022\r\n\005su_id\030\001 \001("
      "\004\0223\n\020move_agent_state\030\002 \001(\0162\031.NetProto.E"
      "MoveAgentState\022\026\n\016max_move_speed\030\003 \001(\002\022-"
      "\n\020move_desired_pos\030\004 \001(\0132\023.NetProto.PBVe"
      "ctor2\022\030\n\020move_desired_dir\030\005 \001(\002\022$\n\034immob"
      "ilized_end_timestamp_ms\030\006 \001(\003\0222\n\025force_p"
      "os_destination\030\007 \001(\0132\023.NetProto.PBVector"
      "2\022\027\n\017force_pos_speed\030\010 \001(\002\0220\n\023force_line"
      "_velocity\030\t \001(\0132\023.NetProto.PBVector2\022\036\n\026"
      "force_line_elasped_sec\030\n \001(\002\022\034\n\024force_li"
      "ne_total_sec\030\013 \001(\002\022/\n\022force_line_end_pos"
      "\030\014 \001(\0132\023.NetProto.PBVector2\022%\n\010unit_pos\030"
      "\r \001(\0132\023.NetProto.PBVector3\022\016\n\006now_ms\030\016 \001"
      "(\003\"u\n\024SceneUnitSkillAction\022\r\n\005su_id\030\001 \001("
      "\004\022$\n\005stage\030\002 \001(\0162\025.NetProto.ESkillState\022"
      "\020\n\010skill_id\030\003 \001(\005\022\026\n\016stage_begin_ms\030\004 \001("
      "\003\"(\n\rSceneTimeSync\022\n\n\002ms\030\001 \001(\003\022\013\n\003sec\030\002 "
      "\001(\002\"\264\001\n\013BulletState\022\r\n\005su_id\030\001 \001(\004\022\r\n\005sp"
      "eed\030\002 \001(\002\022\'\n\ntarget_pos\030\005 \001(\0132\023.NetProto"
      ".PBVector3\022\023\n\013target_suid\030\006 \001(\004\022\022\n\ncurr_"
      "state\030\007 \001(\005\022%\n\010unit_pos\030\n \001(\0132\023.NetProto"
      ".PBVector3\022\016\n\006now_ms\030\013 \001(\003\"\200\001\n\017BulletTar"
      "getPos\022\r\n\005su_id\030\001 \001(\004\022\'\n\ntarget_pos\030\002 \001("
      "\0132\023.NetProto.PBVector3\022\016\n\006now_ms\030\003 \001(\003\022%"
      "\n\010unit_pos\030\004 \001(\0132\023.NetProto.PBVector3B\003\370"
      "\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2010);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Battle.proto", &protobuf_RegisterTypes);
  ::protobuf_Common_2eproto::AddDescriptors();
  ::protobuf_BattleEnum_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Battle_2eproto
namespace NetProto {

// ===================================================================

void RspFreeHero::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspFreeHero::kRedHeroIdFieldNumber;
const int RspFreeHero::kBlueHeroIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspFreeHero::RspFreeHero()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_RspFreeHero.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.RspFreeHero)
}
RspFreeHero::RspFreeHero(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_RspFreeHero.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.RspFreeHero)
}
RspFreeHero::RspFreeHero(const RspFreeHero& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&red_hero_id_, &from.red_hero_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&blue_hero_id_) -
    reinterpret_cast<char*>(&red_hero_id_)) + sizeof(blue_hero_id_));
  // @@protoc_insertion_point(copy_constructor:NetProto.RspFreeHero)
}

void RspFreeHero::SharedCtor() {
  ::memset(&red_hero_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blue_hero_id_) -
      reinterpret_cast<char*>(&red_hero_id_)) + sizeof(blue_hero_id_));
}

RspFreeHero::~RspFreeHero() {
  // @@protoc_insertion_point(destructor:NetProto.RspFreeHero)
  SharedDtor();
}

void RspFreeHero::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void RspFreeHero::ArenaDtor(void* object) {
  RspFreeHero* _this = reinterpret_cast< RspFreeHero* >(object);
  (void)_this;
}
void RspFreeHero::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void RspFreeHero::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspFreeHero::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspFreeHero& RspFreeHero::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_RspFreeHero.base);
  return *internal_default_instance();
}


void RspFreeHero::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.RspFreeHero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&red_hero_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blue_hero_id_) -
      reinterpret_cast<char*>(&red_hero_id_)) + sizeof(blue_hero_id_));
  _internal_metadata_.Clear();
}

bool RspFreeHero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.RspFreeHero)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 red_hero_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &red_hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 blue_hero_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blue_hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.RspFreeHero)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.RspFreeHero)
  return false;
#undef DO_
}

void RspFreeHero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.RspFreeHero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 red_hero_id = 1;
  if (this->red_hero_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->red_hero_id(), output);
  }

  // uint64 blue_hero_id = 2;
  if (this->blue_hero_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->blue_hero_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.RspFreeHero)
}

::google::protobuf::uint8* RspFreeHero::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.RspFreeHero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 red_hero_id = 1;
  if (this->red_hero_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->red_hero_id(), target);
  }

  // uint64 blue_hero_id = 2;
  if (this->blue_hero_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->blue_hero_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.RspFreeHero)
  return target;
}

size_t RspFreeHero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.RspFreeHero)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 red_hero_id = 1;
  if (this->red_hero_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->red_hero_id());
  }

  // uint64 blue_hero_id = 2;
  if (this->blue_hero_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->blue_hero_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspFreeHero::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.RspFreeHero)
  GOOGLE_DCHECK_NE(&from, this);
  const RspFreeHero* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspFreeHero>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.RspFreeHero)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.RspFreeHero)
    MergeFrom(*source);
  }
}

void RspFreeHero::MergeFrom(const RspFreeHero& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.RspFreeHero)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.red_hero_id() != 0) {
    set_red_hero_id(from.red_hero_id());
  }
  if (from.blue_hero_id() != 0) {
    set_blue_hero_id(from.blue_hero_id());
  }
}

void RspFreeHero::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.RspFreeHero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspFreeHero::CopyFrom(const RspFreeHero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.RspFreeHero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspFreeHero::IsInitialized() const {
  return true;
}

void RspFreeHero::Swap(RspFreeHero* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RspFreeHero* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RspFreeHero::UnsafeArenaSwap(RspFreeHero* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RspFreeHero::InternalSwap(RspFreeHero* other) {
  using std::swap;
  swap(red_hero_id_, other->red_hero_id_);
  swap(blue_hero_id_, other->blue_hero_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspFreeHero::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectHeroReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectHeroReq::kHeroIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectHeroReq::SelectHeroReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_SelectHeroReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SelectHeroReq)
}
SelectHeroReq::SelectHeroReq(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SelectHeroReq.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SelectHeroReq)
}
SelectHeroReq::SelectHeroReq(const SelectHeroReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hero_id_ = from.hero_id_;
  // @@protoc_insertion_point(copy_constructor:NetProto.SelectHeroReq)
}

void SelectHeroReq::SharedCtor() {
  hero_id_ = GOOGLE_ULONGLONG(0);
}

SelectHeroReq::~SelectHeroReq() {
  // @@protoc_insertion_point(destructor:NetProto.SelectHeroReq)
  SharedDtor();
}

void SelectHeroReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SelectHeroReq::ArenaDtor(void* object) {
  SelectHeroReq* _this = reinterpret_cast< SelectHeroReq* >(object);
  (void)_this;
}
void SelectHeroReq::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SelectHeroReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SelectHeroReq::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectHeroReq& SelectHeroReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SelectHeroReq.base);
  return *internal_default_instance();
}


void SelectHeroReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SelectHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hero_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SelectHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SelectHeroReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hero_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SelectHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SelectHeroReq)
  return false;
#undef DO_
}

void SelectHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SelectHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hero_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SelectHeroReq)
}

::google::protobuf::uint8* SelectHeroReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SelectHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hero_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SelectHeroReq)
  return target;
}

size_t SelectHeroReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SelectHeroReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hero_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelectHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SelectHeroReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectHeroReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectHeroReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SelectHeroReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SelectHeroReq)
    MergeFrom(*source);
  }
}

void SelectHeroReq::MergeFrom(const SelectHeroReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SelectHeroReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hero_id() != 0) {
    set_hero_id(from.hero_id());
  }
}

void SelectHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SelectHeroReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectHeroReq::CopyFrom(const SelectHeroReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SelectHeroReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectHeroReq::IsInitialized() const {
  return true;
}

void SelectHeroReq::Swap(SelectHeroReq* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SelectHeroReq* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SelectHeroReq::UnsafeArenaSwap(SelectHeroReq* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SelectHeroReq::InternalSwap(SelectHeroReq* other) {
  using std::swap;
  swap(hero_id_, other->hero_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SelectHeroReq::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectHeroRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectHeroRsp::kHeroIdFieldNumber;
const int SelectHeroRsp::kIsSuccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectHeroRsp::SelectHeroRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_SelectHeroRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SelectHeroRsp)
}
SelectHeroRsp::SelectHeroRsp(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SelectHeroRsp.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SelectHeroRsp)
}
SelectHeroRsp::SelectHeroRsp(const SelectHeroRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hero_id_, &from.hero_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_succ_) -
    reinterpret_cast<char*>(&hero_id_)) + sizeof(is_succ_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SelectHeroRsp)
}

void SelectHeroRsp::SharedCtor() {
  ::memset(&hero_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succ_) -
      reinterpret_cast<char*>(&hero_id_)) + sizeof(is_succ_));
}

SelectHeroRsp::~SelectHeroRsp() {
  // @@protoc_insertion_point(destructor:NetProto.SelectHeroRsp)
  SharedDtor();
}

void SelectHeroRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SelectHeroRsp::ArenaDtor(void* object) {
  SelectHeroRsp* _this = reinterpret_cast< SelectHeroRsp* >(object);
  (void)_this;
}
void SelectHeroRsp::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SelectHeroRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SelectHeroRsp::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectHeroRsp& SelectHeroRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SelectHeroRsp.base);
  return *internal_default_instance();
}


void SelectHeroRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SelectHeroRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hero_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succ_) -
      reinterpret_cast<char*>(&hero_id_)) + sizeof(is_succ_));
  _internal_metadata_.Clear();
}

bool SelectHeroRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SelectHeroRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hero_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_succ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SelectHeroRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SelectHeroRsp)
  return false;
#undef DO_
}

void SelectHeroRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SelectHeroRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hero_id(), output);
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_succ(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SelectHeroRsp)
}

::google::protobuf::uint8* SelectHeroRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SelectHeroRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hero_id(), target);
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_succ(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SelectHeroRsp)
  return target;
}

size_t SelectHeroRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SelectHeroRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 hero_id = 1;
  if (this->hero_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hero_id());
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelectHeroRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SelectHeroRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectHeroRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectHeroRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SelectHeroRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SelectHeroRsp)
    MergeFrom(*source);
  }
}

void SelectHeroRsp::MergeFrom(const SelectHeroRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SelectHeroRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hero_id() != 0) {
    set_hero_id(from.hero_id());
  }
  if (from.is_succ() != 0) {
    set_is_succ(from.is_succ());
  }
}

void SelectHeroRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SelectHeroRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectHeroRsp::CopyFrom(const SelectHeroRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SelectHeroRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectHeroRsp::IsInitialized() const {
  return true;
}

void SelectHeroRsp::Swap(SelectHeroRsp* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SelectHeroRsp* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SelectHeroRsp::UnsafeArenaSwap(SelectHeroRsp* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SelectHeroRsp::InternalSwap(SelectHeroRsp* other) {
  using std::swap;
  swap(hero_id_, other->hero_id_);
  swap(is_succ_, other->is_succ_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SelectHeroRsp::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneObjectDisappear::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneObjectDisappear::kObjidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneObjectDisappear::SceneObjectDisappear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_SceneObjectDisappear.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneObjectDisappear)
}
SceneObjectDisappear::SceneObjectDisappear(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  objids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneObjectDisappear.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneObjectDisappear)
}
SceneObjectDisappear::SceneObjectDisappear(const SceneObjectDisappear& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objids_(from.objids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneObjectDisappear)
}

void SceneObjectDisappear::SharedCtor() {
}

SceneObjectDisappear::~SceneObjectDisappear() {
  // @@protoc_insertion_point(destructor:NetProto.SceneObjectDisappear)
  SharedDtor();
}

void SceneObjectDisappear::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SceneObjectDisappear::ArenaDtor(void* object) {
  SceneObjectDisappear* _this = reinterpret_cast< SceneObjectDisappear* >(object);
  (void)_this;
}
void SceneObjectDisappear::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SceneObjectDisappear::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneObjectDisappear::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneObjectDisappear& SceneObjectDisappear::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneObjectDisappear.base);
  return *internal_default_instance();
}


void SceneObjectDisappear::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneObjectDisappear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objids_.Clear();
  _internal_metadata_.Clear();
}

bool SceneObjectDisappear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneObjectDisappear)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 objids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_objids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_objids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneObjectDisappear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneObjectDisappear)
  return false;
#undef DO_
}

void SceneObjectDisappear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneObjectDisappear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 objids = 1;
  if (this->objids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _objids_cached_byte_size_));
  }
  for (int i = 0, n = this->objids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->objids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneObjectDisappear)
}

::google::protobuf::uint8* SceneObjectDisappear::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneObjectDisappear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 objids = 1;
  if (this->objids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _objids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->objids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneObjectDisappear)
  return target;
}

size_t SceneObjectDisappear::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneObjectDisappear)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 objids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->objids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _objids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneObjectDisappear::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneObjectDisappear)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectDisappear* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneObjectDisappear>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneObjectDisappear)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneObjectDisappear)
    MergeFrom(*source);
  }
}

void SceneObjectDisappear::MergeFrom(const SceneObjectDisappear& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneObjectDisappear)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objids_.MergeFrom(from.objids_);
}

void SceneObjectDisappear::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneObjectDisappear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectDisappear::CopyFrom(const SceneObjectDisappear& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneObjectDisappear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectDisappear::IsInitialized() const {
  return true;
}

void SceneObjectDisappear::Swap(SceneObjectDisappear* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneObjectDisappear* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneObjectDisappear::UnsafeArenaSwap(SceneObjectDisappear* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneObjectDisappear::InternalSwap(SceneObjectDisappear* other) {
  using std::swap;
  objids_.InternalSwap(&other->objids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneObjectDisappear::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveToPos::InitAsDefaultInstance() {
  ::NetProto::_MoveToPos_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
}
void MoveToPos::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector2* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.MoveToPos.pos)
}
void MoveToPos::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveToPos::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveToPos::MoveToPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_MoveToPos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.MoveToPos)
}
MoveToPos::MoveToPos(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_MoveToPos.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.MoveToPos)
}
MoveToPos::MoveToPos(const MoveToPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector2(*from.pos_);
  } else {
    pos_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.MoveToPos)
}

void MoveToPos::SharedCtor() {
  pos_ = NULL;
}

MoveToPos::~MoveToPos() {
  // @@protoc_insertion_point(destructor:NetProto.MoveToPos)
  SharedDtor();
}

void MoveToPos::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete pos_;
}

void MoveToPos::ArenaDtor(void* object) {
  MoveToPos* _this = reinterpret_cast< MoveToPos* >(object);
  (void)_this;
}
void MoveToPos::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void MoveToPos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveToPos::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveToPos& MoveToPos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_MoveToPos.base);
  return *internal_default_instance();
}


void MoveToPos::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.MoveToPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  _internal_metadata_.Clear();
}

bool MoveToPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.MoveToPos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.PBVector2 pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.MoveToPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.MoveToPos)
  return false;
#undef DO_
}

void MoveToPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.MoveToPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.PBVector2 pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.MoveToPos)
}

::google::protobuf::uint8* MoveToPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.MoveToPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.PBVector2 pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pos(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.MoveToPos)
  return target;
}

size_t MoveToPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.MoveToPos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector2 pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveToPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.MoveToPos)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveToPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveToPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.MoveToPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.MoveToPos)
    MergeFrom(*source);
  }
}

void MoveToPos::MergeFrom(const MoveToPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.MoveToPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector2::MergeFrom(from.pos());
  }
}

void MoveToPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.MoveToPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveToPos::CopyFrom(const MoveToPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.MoveToPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveToPos::IsInitialized() const {
  return true;
}

void MoveToPos::Swap(MoveToPos* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MoveToPos* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MoveToPos::UnsafeArenaSwap(MoveToPos* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MoveToPos::InternalSwap(MoveToPos* other) {
  using std::swap;
  swap(pos_, other->pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveToPos::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BattleOperation::InitAsDefaultInstance() {
  ::NetProto::_BattleOperation_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
}
void BattleOperation::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector2* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.BattleOperation.pos)
}
void BattleOperation::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleOperation::kOperaFieldNumber;
const int BattleOperation::kTargetIdFieldNumber;
const int BattleOperation::kDirFieldNumber;
const int BattleOperation::kPosFieldNumber;
const int BattleOperation::kSkillSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleOperation::BattleOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_BattleOperation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.BattleOperation)
}
BattleOperation::BattleOperation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_BattleOperation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.BattleOperation)
}
BattleOperation::BattleOperation(const BattleOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector2(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&target_id_, &from.target_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&skill_slot_) -
    reinterpret_cast<char*>(&target_id_)) + sizeof(skill_slot_));
  // @@protoc_insertion_point(copy_constructor:NetProto.BattleOperation)
}

void BattleOperation::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_slot_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(skill_slot_));
}

BattleOperation::~BattleOperation() {
  // @@protoc_insertion_point(destructor:NetProto.BattleOperation)
  SharedDtor();
}

void BattleOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete pos_;
}

void BattleOperation::ArenaDtor(void* object) {
  BattleOperation* _this = reinterpret_cast< BattleOperation* >(object);
  (void)_this;
}
void BattleOperation::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void BattleOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BattleOperation::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BattleOperation& BattleOperation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_BattleOperation.base);
  return *internal_default_instance();
}


void BattleOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.BattleOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&target_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_slot_) -
      reinterpret_cast<char*>(&target_id_)) + sizeof(skill_slot_));
  _internal_metadata_.Clear();
}

bool BattleOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.BattleOperation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.EPlayerOpera opera = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_opera(static_cast< ::NetProto::EPlayerOpera >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 target_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dir = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector2 pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.ESkillSlot skill_slot = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_skill_slot(static_cast< ::NetProto::ESkillSlot >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.BattleOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.BattleOperation)
  return false;
#undef DO_
}

void BattleOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.BattleOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.EPlayerOpera opera = 1;
  if (this->opera() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->opera(), output);
  }

  // uint64 target_id = 2;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_id(), output);
  }

  // float dir = 3;
  if (this->dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->dir(), output);
  }

  // .NetProto.PBVector2 pos = 4;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pos(), output);
  }

  // .NetProto.ESkillSlot skill_slot = 5;
  if (this->skill_slot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->skill_slot(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.BattleOperation)
}

::google::protobuf::uint8* BattleOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.BattleOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.EPlayerOpera opera = 1;
  if (this->opera() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->opera(), target);
  }

  // uint64 target_id = 2;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_id(), target);
  }

  // float dir = 3;
  if (this->dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->dir(), target);
  }

  // .NetProto.PBVector2 pos = 4;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pos(), deterministic, target);
  }

  // .NetProto.ESkillSlot skill_slot = 5;
  if (this->skill_slot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->skill_slot(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.BattleOperation)
  return target;
}

size_t BattleOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.BattleOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector2 pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // uint64 target_id = 2;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_id());
  }

  // .NetProto.EPlayerOpera opera = 1;
  if (this->opera() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opera());
  }

  // float dir = 3;
  if (this->dir() != 0) {
    total_size += 1 + 4;
  }

  // .NetProto.ESkillSlot skill_slot = 5;
  if (this->skill_slot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->skill_slot());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BattleOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.BattleOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const BattleOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.BattleOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.BattleOperation)
    MergeFrom(*source);
  }
}

void BattleOperation::MergeFrom(const BattleOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.BattleOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector2::MergeFrom(from.pos());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
  if (from.opera() != 0) {
    set_opera(from.opera());
  }
  if (from.dir() != 0) {
    set_dir(from.dir());
  }
  if (from.skill_slot() != 0) {
    set_skill_slot(from.skill_slot());
  }
}

void BattleOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.BattleOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleOperation::CopyFrom(const BattleOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.BattleOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleOperation::IsInitialized() const {
  return true;
}

void BattleOperation::Swap(BattleOperation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BattleOperation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BattleOperation::UnsafeArenaSwap(BattleOperation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BattleOperation::InternalSwap(BattleOperation* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(target_id_, other->target_id_);
  swap(opera_, other->opera_);
  swap(dir_, other->dir_);
  swap(skill_slot_, other->skill_slot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BattleOperation::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ViewGrid::InitAsDefaultInstance() {
  ::NetProto::_ViewGrid_default_instance_._instance.get_mutable()->center_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
}
void ViewGrid::unsafe_arena_set_allocated_center(
    ::NetProto::PBVector2* center) {
  if (GetArenaNoVirtual() == NULL) {
    delete center_;
  }
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.ViewGrid.center)
}
void ViewGrid::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) {
    delete center_;
  }
  center_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewGrid::kCenterFieldNumber;
const int ViewGrid::kGridTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewGrid::ViewGrid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_ViewGrid.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ViewGrid)
}
ViewGrid::ViewGrid(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_ViewGrid.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.ViewGrid)
}
ViewGrid::ViewGrid(const ViewGrid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center()) {
    center_ = new ::NetProto::PBVector2(*from.center_);
  } else {
    center_ = NULL;
  }
  grid_type_ = from.grid_type_;
  // @@protoc_insertion_point(copy_constructor:NetProto.ViewGrid)
}

void ViewGrid::SharedCtor() {
  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grid_type_) -
      reinterpret_cast<char*>(&center_)) + sizeof(grid_type_));
}

ViewGrid::~ViewGrid() {
  // @@protoc_insertion_point(destructor:NetProto.ViewGrid)
  SharedDtor();
}

void ViewGrid::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete center_;
}

void ViewGrid::ArenaDtor(void* object) {
  ViewGrid* _this = reinterpret_cast< ViewGrid* >(object);
  (void)_this;
}
void ViewGrid::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ViewGrid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ViewGrid::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewGrid& ViewGrid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_ViewGrid.base);
  return *internal_default_instance();
}


void ViewGrid::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ViewGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && center_ != NULL) {
    delete center_;
  }
  center_ = NULL;
  grid_type_ = 0;
  _internal_metadata_.Clear();
}

bool ViewGrid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ViewGrid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.PBVector2 center = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 grid_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grid_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ViewGrid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ViewGrid)
  return false;
#undef DO_
}

void ViewGrid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ViewGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.PBVector2 center = 1;
  if (this->has_center()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_center(), output);
  }

  // int32 grid_type = 2;
  if (this->grid_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->grid_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.ViewGrid)
}

::google::protobuf::uint8* ViewGrid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ViewGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.PBVector2 center = 1;
  if (this->has_center()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_center(), deterministic, target);
  }

  // int32 grid_type = 2;
  if (this->grid_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->grid_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ViewGrid)
  return target;
}

size_t ViewGrid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ViewGrid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector2 center = 1;
  if (this->has_center()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *center_);
  }

  // int32 grid_type = 2;
  if (this->grid_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grid_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewGrid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ViewGrid)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewGrid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewGrid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ViewGrid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ViewGrid)
    MergeFrom(*source);
  }
}

void ViewGrid::MergeFrom(const ViewGrid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ViewGrid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_center()) {
    mutable_center()->::NetProto::PBVector2::MergeFrom(from.center());
  }
  if (from.grid_type() != 0) {
    set_grid_type(from.grid_type());
  }
}

void ViewGrid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ViewGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewGrid::CopyFrom(const ViewGrid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ViewGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewGrid::IsInitialized() const {
  return true;
}

void ViewGrid::Swap(ViewGrid* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ViewGrid* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ViewGrid::UnsafeArenaSwap(ViewGrid* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ViewGrid::InternalSwap(ViewGrid* other) {
  using std::swap;
  swap(center_, other->center_);
  swap(grid_type_, other->grid_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ViewGrid::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ViewSnapshotDiff::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewSnapshotDiff::kMoreGridsFieldNumber;
const int ViewSnapshotDiff::kMissGridsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewSnapshotDiff::ViewSnapshotDiff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_ViewSnapshotDiff.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ViewSnapshotDiff)
}
ViewSnapshotDiff::ViewSnapshotDiff(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  more_grids_(arena),
  miss_grids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_ViewSnapshotDiff.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.ViewSnapshotDiff)
}
ViewSnapshotDiff::ViewSnapshotDiff(const ViewSnapshotDiff& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      more_grids_(from.more_grids_),
      miss_grids_(from.miss_grids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetProto.ViewSnapshotDiff)
}

void ViewSnapshotDiff::SharedCtor() {
}

ViewSnapshotDiff::~ViewSnapshotDiff() {
  // @@protoc_insertion_point(destructor:NetProto.ViewSnapshotDiff)
  SharedDtor();
}

void ViewSnapshotDiff::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ViewSnapshotDiff::ArenaDtor(void* object) {
  ViewSnapshotDiff* _this = reinterpret_cast< ViewSnapshotDiff* >(object);
  (void)_this;
}
void ViewSnapshotDiff::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ViewSnapshotDiff::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ViewSnapshotDiff::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewSnapshotDiff& ViewSnapshotDiff::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_ViewSnapshotDiff.base);
  return *internal_default_instance();
}


void ViewSnapshotDiff::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ViewSnapshotDiff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  more_grids_.Clear();
  miss_grids_.Clear();
  _internal_metadata_.Clear();
}

bool ViewSnapshotDiff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ViewSnapshotDiff)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 more_grids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_more_grids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_more_grids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 miss_grids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_miss_grids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_miss_grids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ViewSnapshotDiff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ViewSnapshotDiff)
  return false;
#undef DO_
}

void ViewSnapshotDiff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ViewSnapshotDiff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 more_grids = 1;
  if (this->more_grids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _more_grids_cached_byte_size_));
  }
  for (int i = 0, n = this->more_grids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->more_grids(i), output);
  }

  // repeated int32 miss_grids = 2;
  if (this->miss_grids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _miss_grids_cached_byte_size_));
  }
  for (int i = 0, n = this->miss_grids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->miss_grids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.ViewSnapshotDiff)
}

::google::protobuf::uint8* ViewSnapshotDiff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ViewSnapshotDiff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 more_grids = 1;
  if (this->more_grids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _more_grids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->more_grids_, target);
  }

  // repeated int32 miss_grids = 2;
  if (this->miss_grids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _miss_grids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->miss_grids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ViewSnapshotDiff)
  return target;
}

size_t ViewSnapshotDiff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ViewSnapshotDiff)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 more_grids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->more_grids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _more_grids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 miss_grids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->miss_grids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _miss_grids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewSnapshotDiff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ViewSnapshotDiff)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewSnapshotDiff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewSnapshotDiff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ViewSnapshotDiff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ViewSnapshotDiff)
    MergeFrom(*source);
  }
}

void ViewSnapshotDiff::MergeFrom(const ViewSnapshotDiff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ViewSnapshotDiff)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  more_grids_.MergeFrom(from.more_grids_);
  miss_grids_.MergeFrom(from.miss_grids_);
}

void ViewSnapshotDiff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ViewSnapshotDiff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewSnapshotDiff::CopyFrom(const ViewSnapshotDiff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ViewSnapshotDiff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewSnapshotDiff::IsInitialized() const {
  return true;
}

void ViewSnapshotDiff::Swap(ViewSnapshotDiff* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ViewSnapshotDiff* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ViewSnapshotDiff::UnsafeArenaSwap(ViewSnapshotDiff* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ViewSnapshotDiff::InternalSwap(ViewSnapshotDiff* other) {
  using std::swap;
  more_grids_.InternalSwap(&other->more_grids_);
  miss_grids_.InternalSwap(&other->miss_grids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ViewSnapshotDiff::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ViewSnapshot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewSnapshot::kLightGridsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewSnapshot::ViewSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_ViewSnapshot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ViewSnapshot)
}
ViewSnapshot::ViewSnapshot(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  light_grids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_ViewSnapshot.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.ViewSnapshot)
}
ViewSnapshot::ViewSnapshot(const ViewSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      light_grids_(from.light_grids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetProto.ViewSnapshot)
}

void ViewSnapshot::SharedCtor() {
}

ViewSnapshot::~ViewSnapshot() {
  // @@protoc_insertion_point(destructor:NetProto.ViewSnapshot)
  SharedDtor();
}

void ViewSnapshot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ViewSnapshot::ArenaDtor(void* object) {
  ViewSnapshot* _this = reinterpret_cast< ViewSnapshot* >(object);
  (void)_this;
}
void ViewSnapshot::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ViewSnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ViewSnapshot::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewSnapshot& ViewSnapshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_ViewSnapshot.base);
  return *internal_default_instance();
}


void ViewSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ViewSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  light_grids_.Clear();
  _internal_metadata_.Clear();
}

bool ViewSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ViewSnapshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 light_grids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_light_grids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_light_grids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ViewSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ViewSnapshot)
  return false;
#undef DO_
}

void ViewSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ViewSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 light_grids = 1;
  if (this->light_grids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _light_grids_cached_byte_size_));
  }
  for (int i = 0, n = this->light_grids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->light_grids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.ViewSnapshot)
}

::google::protobuf::uint8* ViewSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ViewSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 light_grids = 1;
  if (this->light_grids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _light_grids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->light_grids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ViewSnapshot)
  return target;
}

size_t ViewSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ViewSnapshot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 light_grids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->light_grids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _light_grids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ViewSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ViewSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ViewSnapshot)
    MergeFrom(*source);
  }
}

void ViewSnapshot::MergeFrom(const ViewSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ViewSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  light_grids_.MergeFrom(from.light_grids_);
}

void ViewSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ViewSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewSnapshot::CopyFrom(const ViewSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ViewSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewSnapshot::IsInitialized() const {
  return true;
}

void ViewSnapshot::Swap(ViewSnapshot* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ViewSnapshot* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ViewSnapshot::UnsafeArenaSwap(ViewSnapshot* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ViewSnapshot::InternalSwap(ViewSnapshot* other) {
  using std::swap;
  light_grids_.InternalSwap(&other->light_grids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ViewSnapshot::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ViewAllGrids::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewAllGrids::kGridSizeFieldNumber;
const int ViewAllGrids::kRowFieldNumber;
const int ViewAllGrids::kColFieldNumber;
const int ViewAllGrids::kGridsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewAllGrids::ViewAllGrids()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_ViewAllGrids.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ViewAllGrids)
}
ViewAllGrids::ViewAllGrids(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  grids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_ViewAllGrids.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.ViewAllGrids)
}
ViewAllGrids::ViewAllGrids(const ViewAllGrids& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      grids_(from.grids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&grid_size_, &from.grid_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&grid_size_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:NetProto.ViewAllGrids)
}

void ViewAllGrids::SharedCtor() {
  ::memset(&grid_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&grid_size_)) + sizeof(col_));
}

ViewAllGrids::~ViewAllGrids() {
  // @@protoc_insertion_point(destructor:NetProto.ViewAllGrids)
  SharedDtor();
}

void ViewAllGrids::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ViewAllGrids::ArenaDtor(void* object) {
  ViewAllGrids* _this = reinterpret_cast< ViewAllGrids* >(object);
  (void)_this;
}
void ViewAllGrids::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ViewAllGrids::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ViewAllGrids::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewAllGrids& ViewAllGrids::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_ViewAllGrids.base);
  return *internal_default_instance();
}


void ViewAllGrids::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ViewAllGrids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grids_.Clear();
  ::memset(&grid_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&grid_size_)) + sizeof(col_));
  _internal_metadata_.Clear();
}

bool ViewAllGrids::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ViewAllGrids)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float grid_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &grid_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.ViewGrid grids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_grids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ViewAllGrids)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ViewAllGrids)
  return false;
#undef DO_
}

void ViewAllGrids::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ViewAllGrids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float grid_size = 1;
  if (this->grid_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->grid_size(), output);
  }

  // int32 row = 2;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->row(), output);
  }

  // int32 col = 3;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->col(), output);
  }

  // repeated .NetProto.ViewGrid grids = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->grids(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.ViewAllGrids)
}

::google::protobuf::uint8* ViewAllGrids::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ViewAllGrids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float grid_size = 1;
  if (this->grid_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->grid_size(), target);
  }

  // int32 row = 2;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->row(), target);
  }

  // int32 col = 3;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->col(), target);
  }

  // repeated .NetProto.ViewGrid grids = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->grids(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ViewAllGrids)
  return target;
}

size_t ViewAllGrids::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ViewAllGrids)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NetProto.ViewGrid grids = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->grids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->grids(static_cast<int>(i)));
    }
  }

  // float grid_size = 1;
  if (this->grid_size() != 0) {
    total_size += 1 + 4;
  }

  // int32 row = 2;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 3;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewAllGrids::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ViewAllGrids)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewAllGrids* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewAllGrids>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ViewAllGrids)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ViewAllGrids)
    MergeFrom(*source);
  }
}

void ViewAllGrids::MergeFrom(const ViewAllGrids& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ViewAllGrids)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grids_.MergeFrom(from.grids_);
  if (from.grid_size() != 0) {
    set_grid_size(from.grid_size());
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
}

void ViewAllGrids::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ViewAllGrids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAllGrids::CopyFrom(const ViewAllGrids& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ViewAllGrids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAllGrids::IsInitialized() const {
  return true;
}

void ViewAllGrids::Swap(ViewAllGrids* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ViewAllGrids* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ViewAllGrids::UnsafeArenaSwap(ViewAllGrids* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ViewAllGrids::InternalSwap(ViewAllGrids* other) {
  using std::swap;
  CastToBase(&grids_)->InternalSwap(CastToBase(&other->grids_));
  swap(grid_size_, other->grid_size_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ViewAllGrids::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneUnitState::InitAsDefaultInstance() {
  ::NetProto::_SceneUnitState_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
}
void SceneUnitState::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector3* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitState.pos)
}
void SceneUnitState::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneUnitState::kSuIdFieldNumber;
const int SceneUnitState::kUnitTypeFieldNumber;
const int SceneUnitState::kModelIdFieldNumber;
const int SceneUnitState::kPosFieldNumber;
const int SceneUnitState::kFaceDirFieldNumber;
const int SceneUnitState::kParentSuIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneUnitState::SceneUnitState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_SceneUnitState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneUnitState)
}
SceneUnitState::SceneUnitState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneUnitState.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneUnitState)
}
SceneUnitState::SceneUnitState(const SceneUnitState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector3(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&face_dir_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(face_dir_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneUnitState)
}

void SceneUnitState::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_dir_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(face_dir_));
}

SceneUnitState::~SceneUnitState() {
  // @@protoc_insertion_point(destructor:NetProto.SceneUnitState)
  SharedDtor();
}

void SceneUnitState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete pos_;
}

void SceneUnitState::ArenaDtor(void* object) {
  SceneUnitState* _this = reinterpret_cast< SceneUnitState* >(object);
  (void)_this;
}
void SceneUnitState::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SceneUnitState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneUnitState::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneUnitState& SceneUnitState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneUnitState.base);
  return *internal_default_instance();
}


void SceneUnitState::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneUnitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_dir_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(face_dir_));
  _internal_metadata_.Clear();
}

bool SceneUnitState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneUnitState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.ESceneUnitType unit_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_unit_type(static_cast< ::NetProto::ESceneUnitType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 model_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float face_dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 parent_su_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &parent_su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneUnitState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneUnitState)
  return false;
#undef DO_
}

void SceneUnitState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneUnitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // .NetProto.ESceneUnitType unit_type = 2;
  if (this->unit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->unit_type(), output);
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->model_id(), output);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pos(), output);
  }

  // float face_dir = 5;
  if (this->face_dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->face_dir(), output);
  }

  // uint64 parent_su_id = 6;
  if (this->parent_su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->parent_su_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneUnitState)
}

::google::protobuf::uint8* SceneUnitState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneUnitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // .NetProto.ESceneUnitType unit_type = 2;
  if (this->unit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->unit_type(), target);
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->model_id(), target);
  }

  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pos(), deterministic, target);
  }

  // float face_dir = 5;
  if (this->face_dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->face_dir(), target);
  }

  // uint64 parent_su_id = 6;
  if (this->parent_su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->parent_su_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneUnitState)
  return target;
}

size_t SceneUnitState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneUnitState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector3 pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // .NetProto.ESceneUnitType unit_type = 2;
  if (this->unit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->unit_type());
  }

  // int32 model_id = 3;
  if (this->model_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->model_id());
  }

  // uint64 parent_su_id = 6;
  if (this->parent_su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->parent_su_id());
  }

  // float face_dir = 5;
  if (this->face_dir() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneUnitState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneUnitState)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneUnitState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneUnitState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneUnitState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneUnitState)
    MergeFrom(*source);
  }
}

void SceneUnitState::MergeFrom(const SceneUnitState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneUnitState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector3::MergeFrom(from.pos());
  }
  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.unit_type() != 0) {
    set_unit_type(from.unit_type());
  }
  if (from.model_id() != 0) {
    set_model_id(from.model_id());
  }
  if (from.parent_su_id() != 0) {
    set_parent_su_id(from.parent_su_id());
  }
  if (from.face_dir() != 0) {
    set_face_dir(from.face_dir());
  }
}

void SceneUnitState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneUnitState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneUnitState::CopyFrom(const SceneUnitState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneUnitState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneUnitState::IsInitialized() const {
  return true;
}

void SceneUnitState::Swap(SceneUnitState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneUnitState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneUnitState::UnsafeArenaSwap(SceneUnitState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneUnitState::InternalSwap(SceneUnitState* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(su_id_, other->su_id_);
  swap(unit_type_, other->unit_type_);
  swap(model_id_, other->model_id_);
  swap(parent_su_id_, other->parent_su_id_);
  swap(face_dir_, other->face_dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneUnitState::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneUnitTransform::InitAsDefaultInstance() {
  ::NetProto::_SceneUnitTransform_default_instance_._instance.get_mutable()->pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
}
void SceneUnitTransform::unsafe_arena_set_allocated_pos(
    ::NetProto::PBVector3* pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete pos_;
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitTransform.pos)
}
void SceneUnitTransform::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneUnitTransform::kSuIdFieldNumber;
const int SceneUnitTransform::kPosFieldNumber;
const int SceneUnitTransform::kFaceDirFieldNumber;
const int SceneUnitTransform::kParentSuIdFieldNumber;
const int SceneUnitTransform::kMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneUnitTransform::SceneUnitTransform()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_SceneUnitTransform.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneUnitTransform)
}
SceneUnitTransform::SceneUnitTransform(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneUnitTransform.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneUnitTransform)
}
SceneUnitTransform::SceneUnitTransform(const SceneUnitTransform& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::NetProto::PBVector3(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&face_dir_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(face_dir_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneUnitTransform)
}

void SceneUnitTransform::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_dir_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(face_dir_));
}

SceneUnitTransform::~SceneUnitTransform() {
  // @@protoc_insertion_point(destructor:NetProto.SceneUnitTransform)
  SharedDtor();
}

void SceneUnitTransform::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete pos_;
}

void SceneUnitTransform::ArenaDtor(void* object) {
  SceneUnitTransform* _this = reinterpret_cast< SceneUnitTransform* >(object);
  (void)_this;
}
void SceneUnitTransform::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SceneUnitTransform::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneUnitTransform::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneUnitTransform& SceneUnitTransform::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneUnitTransform.base);
  return *internal_default_instance();
}


void SceneUnitTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneUnitTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_dir_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(face_dir_));
  _internal_metadata_.Clear();
}

bool SceneUnitTransform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneUnitTransform)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float face_dir = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 parent_su_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &parent_su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneUnitTransform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneUnitTransform)
  return false;
#undef DO_
}

void SceneUnitTransform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneUnitTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // .NetProto.PBVector3 pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pos(), output);
  }

  // float face_dir = 3;
  if (this->face_dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->face_dir(), output);
  }

  // uint64 parent_su_id = 4;
  if (this->parent_su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->parent_su_id(), output);
  }

  // int64 ms = 5;
  if (this->ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneUnitTransform)
}

::google::protobuf::uint8* SceneUnitTransform::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneUnitTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // .NetProto.PBVector3 pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pos(), deterministic, target);
  }

  // float face_dir = 3;
  if (this->face_dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->face_dir(), target);
  }

  // uint64 parent_su_id = 4;
  if (this->parent_su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->parent_su_id(), target);
  }

  // int64 ms = 5;
  if (this->ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneUnitTransform)
  return target;
}

size_t SceneUnitTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneUnitTransform)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector3 pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // uint64 parent_su_id = 4;
  if (this->parent_su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->parent_su_id());
  }

  // int64 ms = 5;
  if (this->ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ms());
  }

  // float face_dir = 3;
  if (this->face_dir() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneUnitTransform::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneUnitTransform)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneUnitTransform* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneUnitTransform>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneUnitTransform)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneUnitTransform)
    MergeFrom(*source);
  }
}

void SceneUnitTransform::MergeFrom(const SceneUnitTransform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneUnitTransform)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::NetProto::PBVector3::MergeFrom(from.pos());
  }
  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.parent_su_id() != 0) {
    set_parent_su_id(from.parent_su_id());
  }
  if (from.ms() != 0) {
    set_ms(from.ms());
  }
  if (from.face_dir() != 0) {
    set_face_dir(from.face_dir());
  }
}

void SceneUnitTransform::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneUnitTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneUnitTransform::CopyFrom(const SceneUnitTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneUnitTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneUnitTransform::IsInitialized() const {
  return true;
}

void SceneUnitTransform::Swap(SceneUnitTransform* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneUnitTransform* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneUnitTransform::UnsafeArenaSwap(SceneUnitTransform* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneUnitTransform::InternalSwap(SceneUnitTransform* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(su_id_, other->su_id_);
  swap(parent_su_id_, other->parent_su_id_);
  swap(ms_, other->ms_);
  swap(face_dir_, other->face_dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneUnitTransform::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneUnitMove::InitAsDefaultInstance() {
  ::NetProto::_SceneUnitMove_default_instance_._instance.get_mutable()->move_desired_pos_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
  ::NetProto::_SceneUnitMove_default_instance_._instance.get_mutable()->force_pos_destination_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
  ::NetProto::_SceneUnitMove_default_instance_._instance.get_mutable()->force_line_velocity_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
  ::NetProto::_SceneUnitMove_default_instance_._instance.get_mutable()->force_line_end_pos_ = const_cast< ::NetProto::PBVector2*>(
      ::NetProto::PBVector2::internal_default_instance());
  ::NetProto::_SceneUnitMove_default_instance_._instance.get_mutable()->unit_pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
}
void SceneUnitMove::unsafe_arena_set_allocated_move_desired_pos(
    ::NetProto::PBVector2* move_desired_pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete move_desired_pos_;
  }
  move_desired_pos_ = move_desired_pos;
  if (move_desired_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitMove.move_desired_pos)
}
void SceneUnitMove::clear_move_desired_pos() {
  if (GetArenaNoVirtual() == NULL && move_desired_pos_ != NULL) {
    delete move_desired_pos_;
  }
  move_desired_pos_ = NULL;
}
void SceneUnitMove::unsafe_arena_set_allocated_force_pos_destination(
    ::NetProto::PBVector2* force_pos_destination) {
  if (GetArenaNoVirtual() == NULL) {
    delete force_pos_destination_;
  }
  force_pos_destination_ = force_pos_destination;
  if (force_pos_destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitMove.force_pos_destination)
}
void SceneUnitMove::clear_force_pos_destination() {
  if (GetArenaNoVirtual() == NULL && force_pos_destination_ != NULL) {
    delete force_pos_destination_;
  }
  force_pos_destination_ = NULL;
}
void SceneUnitMove::unsafe_arena_set_allocated_force_line_velocity(
    ::NetProto::PBVector2* force_line_velocity) {
  if (GetArenaNoVirtual() == NULL) {
    delete force_line_velocity_;
  }
  force_line_velocity_ = force_line_velocity;
  if (force_line_velocity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitMove.force_line_velocity)
}
void SceneUnitMove::clear_force_line_velocity() {
  if (GetArenaNoVirtual() == NULL && force_line_velocity_ != NULL) {
    delete force_line_velocity_;
  }
  force_line_velocity_ = NULL;
}
void SceneUnitMove::unsafe_arena_set_allocated_force_line_end_pos(
    ::NetProto::PBVector2* force_line_end_pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete force_line_end_pos_;
  }
  force_line_end_pos_ = force_line_end_pos;
  if (force_line_end_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitMove.force_line_end_pos)
}
void SceneUnitMove::clear_force_line_end_pos() {
  if (GetArenaNoVirtual() == NULL && force_line_end_pos_ != NULL) {
    delete force_line_end_pos_;
  }
  force_line_end_pos_ = NULL;
}
void SceneUnitMove::unsafe_arena_set_allocated_unit_pos(
    ::NetProto::PBVector3* unit_pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete unit_pos_;
  }
  unit_pos_ = unit_pos;
  if (unit_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.SceneUnitMove.unit_pos)
}
void SceneUnitMove::clear_unit_pos() {
  if (GetArenaNoVirtual() == NULL && unit_pos_ != NULL) {
    delete unit_pos_;
  }
  unit_pos_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneUnitMove::kSuIdFieldNumber;
const int SceneUnitMove::kMoveAgentStateFieldNumber;
const int SceneUnitMove::kMaxMoveSpeedFieldNumber;
const int SceneUnitMove::kMoveDesiredPosFieldNumber;
const int SceneUnitMove::kMoveDesiredDirFieldNumber;
const int SceneUnitMove::kImmobilizedEndTimestampMsFieldNumber;
const int SceneUnitMove::kForcePosDestinationFieldNumber;
const int SceneUnitMove::kForcePosSpeedFieldNumber;
const int SceneUnitMove::kForceLineVelocityFieldNumber;
const int SceneUnitMove::kForceLineElaspedSecFieldNumber;
const int SceneUnitMove::kForceLineTotalSecFieldNumber;
const int SceneUnitMove::kForceLineEndPosFieldNumber;
const int SceneUnitMove::kUnitPosFieldNumber;
const int SceneUnitMove::kNowMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneUnitMove::SceneUnitMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_SceneUnitMove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneUnitMove)
}
SceneUnitMove::SceneUnitMove(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneUnitMove.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneUnitMove)
}
SceneUnitMove::SceneUnitMove(const SceneUnitMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_move_desired_pos()) {
    move_desired_pos_ = new ::NetProto::PBVector2(*from.move_desired_pos_);
  } else {
    move_desired_pos_ = NULL;
  }
  if (from.has_force_pos_destination()) {
    force_pos_destination_ = new ::NetProto::PBVector2(*from.force_pos_destination_);
  } else {
    force_pos_destination_ = NULL;
  }
  if (from.has_force_line_velocity()) {
    force_line_velocity_ = new ::NetProto::PBVector2(*from.force_line_velocity_);
  } else {
    force_line_velocity_ = NULL;
  }
  if (from.has_force_line_end_pos()) {
    force_line_end_pos_ = new ::NetProto::PBVector2(*from.force_line_end_pos_);
  } else {
    force_line_end_pos_ = NULL;
  }
  if (from.has_unit_pos()) {
    unit_pos_ = new ::NetProto::PBVector3(*from.unit_pos_);
  } else {
    unit_pos_ = NULL;
  }
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&now_ms_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(now_ms_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneUnitMove)
}

void SceneUnitMove::SharedCtor() {
  ::memset(&move_desired_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&now_ms_) -
      reinterpret_cast<char*>(&move_desired_pos_)) + sizeof(now_ms_));
}

SceneUnitMove::~SceneUnitMove() {
  // @@protoc_insertion_point(destructor:NetProto.SceneUnitMove)
  SharedDtor();
}

void SceneUnitMove::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete move_desired_pos_;
  if (this != internal_default_instance()) delete force_pos_destination_;
  if (this != internal_default_instance()) delete force_line_velocity_;
  if (this != internal_default_instance()) delete force_line_end_pos_;
  if (this != internal_default_instance()) delete unit_pos_;
}

void SceneUnitMove::ArenaDtor(void* object) {
  SceneUnitMove* _this = reinterpret_cast< SceneUnitMove* >(object);
  (void)_this;
}
void SceneUnitMove::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SceneUnitMove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneUnitMove::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneUnitMove& SceneUnitMove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneUnitMove.base);
  return *internal_default_instance();
}


void SceneUnitMove::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneUnitMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && move_desired_pos_ != NULL) {
    delete move_desired_pos_;
  }
  move_desired_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && force_pos_destination_ != NULL) {
    delete force_pos_destination_;
  }
  force_pos_destination_ = NULL;
  if (GetArenaNoVirtual() == NULL && force_line_velocity_ != NULL) {
    delete force_line_velocity_;
  }
  force_line_velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && force_line_end_pos_ != NULL) {
    delete force_line_end_pos_;
  }
  force_line_end_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_pos_ != NULL) {
    delete unit_pos_;
  }
  unit_pos_ = NULL;
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&now_ms_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(now_ms_));
  _internal_metadata_.Clear();
}

bool SceneUnitMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneUnitMove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.EMoveAgentState move_agent_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_move_agent_state(static_cast< ::NetProto::EMoveAgentState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_move_speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_move_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector2 move_desired_pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_move_desired_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float move_desired_dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &move_desired_dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 immobilized_end_timestamp_ms = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &immobilized_end_timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector2 force_pos_destination = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_force_pos_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float force_pos_speed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &force_pos_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector2 force_line_velocity = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_force_line_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float force_line_elasped_sec = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &force_line_elasped_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float force_line_total_sec = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &force_line_total_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector2 force_line_end_pos = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_force_line_end_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 unit_pos = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 now_ms = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &now_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneUnitMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneUnitMove)
  return false;
#undef DO_
}

void SceneUnitMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneUnitMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->move_agent_state(), output);
  }

  // float max_move_speed = 3;
  if (this->max_move_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->max_move_speed(), output);
  }

  // .NetProto.PBVector2 move_desired_pos = 4;
  if (this->has_move_desired_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_move_desired_pos(), output);
  }

  // float move_desired_dir = 5;
  if (this->move_desired_dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->move_desired_dir(), output);
  }

  // int64 immobilized_end_timestamp_ms = 6;
  if (this->immobilized_end_timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->immobilized_end_timestamp_ms(), output);
  }

  // .NetProto.PBVector2 force_pos_destination = 7;
  if (this->has_force_pos_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_force_pos_destination(), output);
  }

  // float force_pos_speed = 8;
  if (this->force_pos_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->force_pos_speed(), output);
  }

  // .NetProto.PBVector2 force_line_velocity = 9;
  if (this->has_force_line_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_force_line_velocity(), output);
  }

  // float force_line_elasped_sec = 10;
  if (this->force_line_elasped_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->force_line_elasped_sec(), output);
  }

  // float force_line_total_sec = 11;
  if (this->force_line_total_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->force_line_total_sec(), output);
  }

  // .NetProto.PBVector2 force_line_end_pos = 12;
  if (this->has_force_line_end_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_force_line_end_pos(), output);
  }

  // .NetProto.PBVector3 unit_pos = 13;
  if (this->has_unit_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_unit_pos(), output);
  }

  // int64 now_ms = 14;
  if (this->now_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->now_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneUnitMove)
}

::google::protobuf::uint8* SceneUnitMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneUnitMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->move_agent_state(), target);
  }

  // float max_move_speed = 3;
  if (this->max_move_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->max_move_speed(), target);
  }

  // .NetProto.PBVector2 move_desired_pos = 4;
  if (this->has_move_desired_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_move_desired_pos(), deterministic, target);
  }

  // float move_desired_dir = 5;
  if (this->move_desired_dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->move_desired_dir(), target);
  }

  // int64 immobilized_end_timestamp_ms = 6;
  if (this->immobilized_end_timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->immobilized_end_timestamp_ms(), target);
  }

  // .NetProto.PBVector2 force_pos_destination = 7;
  if (this->has_force_pos_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_force_pos_destination(), deterministic, target);
  }

  // float force_pos_speed = 8;
  if (this->force_pos_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->force_pos_speed(), target);
  }

  // .NetProto.PBVector2 force_line_velocity = 9;
  if (this->has_force_line_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_force_line_velocity(), deterministic, target);
  }

  // float force_line_elasped_sec = 10;
  if (this->force_line_elasped_sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->force_line_elasped_sec(), target);
  }

  // float force_line_total_sec = 11;
  if (this->force_line_total_sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->force_line_total_sec(), target);
  }

  // .NetProto.PBVector2 force_line_end_pos = 12;
  if (this->has_force_line_end_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_force_line_end_pos(), deterministic, target);
  }

  // .NetProto.PBVector3 unit_pos = 13;
  if (this->has_unit_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_unit_pos(), deterministic, target);
  }

  // int64 now_ms = 14;
  if (this->now_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->now_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneUnitMove)
  return target;
}

size_t SceneUnitMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneUnitMove)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector2 move_desired_pos = 4;
  if (this->has_move_desired_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *move_desired_pos_);
  }

  // .NetProto.PBVector2 force_pos_destination = 7;
  if (this->has_force_pos_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *force_pos_destination_);
  }

  // .NetProto.PBVector2 force_line_velocity = 9;
  if (this->has_force_line_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *force_line_velocity_);
  }

  // .NetProto.PBVector2 force_line_end_pos = 12;
  if (this->has_force_line_end_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *force_line_end_pos_);
  }

  // .NetProto.PBVector3 unit_pos = 13;
  if (this->has_unit_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_pos_);
  }

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // .NetProto.EMoveAgentState move_agent_state = 2;
  if (this->move_agent_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->move_agent_state());
  }

  // float max_move_speed = 3;
  if (this->max_move_speed() != 0) {
    total_size += 1 + 4;
  }

  // int64 immobilized_end_timestamp_ms = 6;
  if (this->immobilized_end_timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->immobilized_end_timestamp_ms());
  }

  // float move_desired_dir = 5;
  if (this->move_desired_dir() != 0) {
    total_size += 1 + 4;
  }

  // float force_pos_speed = 8;
  if (this->force_pos_speed() != 0) {
    total_size += 1 + 4;
  }

  // float force_line_elasped_sec = 10;
  if (this->force_line_elasped_sec() != 0) {
    total_size += 1 + 4;
  }

  // float force_line_total_sec = 11;
  if (this->force_line_total_sec() != 0) {
    total_size += 1 + 4;
  }

  // int64 now_ms = 14;
  if (this->now_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->now_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneUnitMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneUnitMove)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneUnitMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneUnitMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneUnitMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneUnitMove)
    MergeFrom(*source);
  }
}

void SceneUnitMove::MergeFrom(const SceneUnitMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneUnitMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_move_desired_pos()) {
    mutable_move_desired_pos()->::NetProto::PBVector2::MergeFrom(from.move_desired_pos());
  }
  if (from.has_force_pos_destination()) {
    mutable_force_pos_destination()->::NetProto::PBVector2::MergeFrom(from.force_pos_destination());
  }
  if (from.has_force_line_velocity()) {
    mutable_force_line_velocity()->::NetProto::PBVector2::MergeFrom(from.force_line_velocity());
  }
  if (from.has_force_line_end_pos()) {
    mutable_force_line_end_pos()->::NetProto::PBVector2::MergeFrom(from.force_line_end_pos());
  }
  if (from.has_unit_pos()) {
    mutable_unit_pos()->::NetProto::PBVector3::MergeFrom(from.unit_pos());
  }
  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.move_agent_state() != 0) {
    set_move_agent_state(from.move_agent_state());
  }
  if (from.max_move_speed() != 0) {
    set_max_move_speed(from.max_move_speed());
  }
  if (from.immobilized_end_timestamp_ms() != 0) {
    set_immobilized_end_timestamp_ms(from.immobilized_end_timestamp_ms());
  }
  if (from.move_desired_dir() != 0) {
    set_move_desired_dir(from.move_desired_dir());
  }
  if (from.force_pos_speed() != 0) {
    set_force_pos_speed(from.force_pos_speed());
  }
  if (from.force_line_elasped_sec() != 0) {
    set_force_line_elasped_sec(from.force_line_elasped_sec());
  }
  if (from.force_line_total_sec() != 0) {
    set_force_line_total_sec(from.force_line_total_sec());
  }
  if (from.now_ms() != 0) {
    set_now_ms(from.now_ms());
  }
}

void SceneUnitMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneUnitMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneUnitMove::CopyFrom(const SceneUnitMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneUnitMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneUnitMove::IsInitialized() const {
  return true;
}

void SceneUnitMove::Swap(SceneUnitMove* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneUnitMove* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneUnitMove::UnsafeArenaSwap(SceneUnitMove* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneUnitMove::InternalSwap(SceneUnitMove* other) {
  using std::swap;
  swap(move_desired_pos_, other->move_desired_pos_);
  swap(force_pos_destination_, other->force_pos_destination_);
  swap(force_line_velocity_, other->force_line_velocity_);
  swap(force_line_end_pos_, other->force_line_end_pos_);
  swap(unit_pos_, other->unit_pos_);
  swap(su_id_, other->su_id_);
  swap(move_agent_state_, other->move_agent_state_);
  swap(max_move_speed_, other->max_move_speed_);
  swap(immobilized_end_timestamp_ms_, other->immobilized_end_timestamp_ms_);
  swap(move_desired_dir_, other->move_desired_dir_);
  swap(force_pos_speed_, other->force_pos_speed_);
  swap(force_line_elasped_sec_, other->force_line_elasped_sec_);
  swap(force_line_total_sec_, other->force_line_total_sec_);
  swap(now_ms_, other->now_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneUnitMove::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneUnitSkillAction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneUnitSkillAction::kSuIdFieldNumber;
const int SceneUnitSkillAction::kStageFieldNumber;
const int SceneUnitSkillAction::kSkillIdFieldNumber;
const int SceneUnitSkillAction::kStageBeginMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneUnitSkillAction::SceneUnitSkillAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_SceneUnitSkillAction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneUnitSkillAction)
}
SceneUnitSkillAction::SceneUnitSkillAction(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneUnitSkillAction.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneUnitSkillAction)
}
SceneUnitSkillAction::SceneUnitSkillAction(const SceneUnitSkillAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stage_begin_ms_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(stage_begin_ms_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneUnitSkillAction)
}

void SceneUnitSkillAction::SharedCtor() {
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stage_begin_ms_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(stage_begin_ms_));
}

SceneUnitSkillAction::~SceneUnitSkillAction() {
  // @@protoc_insertion_point(destructor:NetProto.SceneUnitSkillAction)
  SharedDtor();
}

void SceneUnitSkillAction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SceneUnitSkillAction::ArenaDtor(void* object) {
  SceneUnitSkillAction* _this = reinterpret_cast< SceneUnitSkillAction* >(object);
  (void)_this;
}
void SceneUnitSkillAction::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SceneUnitSkillAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneUnitSkillAction::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneUnitSkillAction& SceneUnitSkillAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneUnitSkillAction.base);
  return *internal_default_instance();
}


void SceneUnitSkillAction::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneUnitSkillAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stage_begin_ms_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(stage_begin_ms_));
  _internal_metadata_.Clear();
}

bool SceneUnitSkillAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneUnitSkillAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.ESkillState stage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stage(static_cast< ::NetProto::ESkillState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skill_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 stage_begin_ms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stage_begin_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneUnitSkillAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneUnitSkillAction)
  return false;
#undef DO_
}

void SceneUnitSkillAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneUnitSkillAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // .NetProto.ESkillState stage = 2;
  if (this->stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stage(), output);
  }

  // int32 skill_id = 3;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_id(), output);
  }

  // int64 stage_begin_ms = 4;
  if (this->stage_begin_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->stage_begin_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneUnitSkillAction)
}

::google::protobuf::uint8* SceneUnitSkillAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneUnitSkillAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // .NetProto.ESkillState stage = 2;
  if (this->stage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stage(), target);
  }

  // int32 skill_id = 3;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_id(), target);
  }

  // int64 stage_begin_ms = 4;
  if (this->stage_begin_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->stage_begin_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneUnitSkillAction)
  return target;
}

size_t SceneUnitSkillAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneUnitSkillAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // .NetProto.ESkillState stage = 2;
  if (this->stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stage());
  }

  // int32 skill_id = 3;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skill_id());
  }

  // int64 stage_begin_ms = 4;
  if (this->stage_begin_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stage_begin_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneUnitSkillAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneUnitSkillAction)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneUnitSkillAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneUnitSkillAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneUnitSkillAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneUnitSkillAction)
    MergeFrom(*source);
  }
}

void SceneUnitSkillAction::MergeFrom(const SceneUnitSkillAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneUnitSkillAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.stage() != 0) {
    set_stage(from.stage());
  }
  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
  if (from.stage_begin_ms() != 0) {
    set_stage_begin_ms(from.stage_begin_ms());
  }
}

void SceneUnitSkillAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneUnitSkillAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneUnitSkillAction::CopyFrom(const SceneUnitSkillAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneUnitSkillAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneUnitSkillAction::IsInitialized() const {
  return true;
}

void SceneUnitSkillAction::Swap(SceneUnitSkillAction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneUnitSkillAction* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneUnitSkillAction::UnsafeArenaSwap(SceneUnitSkillAction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneUnitSkillAction::InternalSwap(SceneUnitSkillAction* other) {
  using std::swap;
  swap(su_id_, other->su_id_);
  swap(stage_, other->stage_);
  swap(skill_id_, other->skill_id_);
  swap(stage_begin_ms_, other->stage_begin_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneUnitSkillAction::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneTimeSync::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneTimeSync::kMsFieldNumber;
const int SceneTimeSync::kSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneTimeSync::SceneTimeSync()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_SceneTimeSync.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.SceneTimeSync)
}
SceneTimeSync::SceneTimeSync(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneTimeSync.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.SceneTimeSync)
}
SceneTimeSync::SceneTimeSync(const SceneTimeSync& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ms_, &from.ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&sec_) -
    reinterpret_cast<char*>(&ms_)) + sizeof(sec_));
  // @@protoc_insertion_point(copy_constructor:NetProto.SceneTimeSync)
}

void SceneTimeSync::SharedCtor() {
  ::memset(&ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sec_) -
      reinterpret_cast<char*>(&ms_)) + sizeof(sec_));
}

SceneTimeSync::~SceneTimeSync() {
  // @@protoc_insertion_point(destructor:NetProto.SceneTimeSync)
  SharedDtor();
}

void SceneTimeSync::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SceneTimeSync::ArenaDtor(void* object) {
  SceneTimeSync* _this = reinterpret_cast< SceneTimeSync* >(object);
  (void)_this;
}
void SceneTimeSync::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SceneTimeSync::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneTimeSync::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneTimeSync& SceneTimeSync::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_SceneTimeSync.base);
  return *internal_default_instance();
}


void SceneTimeSync::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.SceneTimeSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sec_) -
      reinterpret_cast<char*>(&ms_)) + sizeof(sec_));
  _internal_metadata_.Clear();
}

bool SceneTimeSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.SceneTimeSync)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float sec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.SceneTimeSync)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.SceneTimeSync)
  return false;
#undef DO_
}

void SceneTimeSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.SceneTimeSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ms = 1;
  if (this->ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ms(), output);
  }

  // float sec = 2;
  if (this->sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->sec(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.SceneTimeSync)
}

::google::protobuf::uint8* SceneTimeSync::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.SceneTimeSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ms = 1;
  if (this->ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ms(), target);
  }

  // float sec = 2;
  if (this->sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->sec(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.SceneTimeSync)
  return target;
}

size_t SceneTimeSync::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.SceneTimeSync)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 ms = 1;
  if (this->ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ms());
  }

  // float sec = 2;
  if (this->sec() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneTimeSync::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.SceneTimeSync)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneTimeSync* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneTimeSync>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.SceneTimeSync)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.SceneTimeSync)
    MergeFrom(*source);
  }
}

void SceneTimeSync::MergeFrom(const SceneTimeSync& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.SceneTimeSync)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ms() != 0) {
    set_ms(from.ms());
  }
  if (from.sec() != 0) {
    set_sec(from.sec());
  }
}

void SceneTimeSync::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.SceneTimeSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneTimeSync::CopyFrom(const SceneTimeSync& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.SceneTimeSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneTimeSync::IsInitialized() const {
  return true;
}

void SceneTimeSync::Swap(SceneTimeSync* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SceneTimeSync* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SceneTimeSync::UnsafeArenaSwap(SceneTimeSync* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SceneTimeSync::InternalSwap(SceneTimeSync* other) {
  using std::swap;
  swap(ms_, other->ms_);
  swap(sec_, other->sec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneTimeSync::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulletState::InitAsDefaultInstance() {
  ::NetProto::_BulletState_default_instance_._instance.get_mutable()->target_pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
  ::NetProto::_BulletState_default_instance_._instance.get_mutable()->unit_pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
}
void BulletState::unsafe_arena_set_allocated_target_pos(
    ::NetProto::PBVector3* target_pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete target_pos_;
  }
  target_pos_ = target_pos;
  if (target_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.BulletState.target_pos)
}
void BulletState::clear_target_pos() {
  if (GetArenaNoVirtual() == NULL && target_pos_ != NULL) {
    delete target_pos_;
  }
  target_pos_ = NULL;
}
void BulletState::unsafe_arena_set_allocated_unit_pos(
    ::NetProto::PBVector3* unit_pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete unit_pos_;
  }
  unit_pos_ = unit_pos;
  if (unit_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.BulletState.unit_pos)
}
void BulletState::clear_unit_pos() {
  if (GetArenaNoVirtual() == NULL && unit_pos_ != NULL) {
    delete unit_pos_;
  }
  unit_pos_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulletState::kSuIdFieldNumber;
const int BulletState::kSpeedFieldNumber;
const int BulletState::kTargetPosFieldNumber;
const int BulletState::kTargetSuidFieldNumber;
const int BulletState::kCurrStateFieldNumber;
const int BulletState::kUnitPosFieldNumber;
const int BulletState::kNowMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulletState::BulletState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_BulletState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.BulletState)
}
BulletState::BulletState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_BulletState.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.BulletState)
}
BulletState::BulletState(const BulletState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_pos()) {
    target_pos_ = new ::NetProto::PBVector3(*from.target_pos_);
  } else {
    target_pos_ = NULL;
  }
  if (from.has_unit_pos()) {
    unit_pos_ = new ::NetProto::PBVector3(*from.unit_pos_);
  } else {
    unit_pos_ = NULL;
  }
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&now_ms_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(now_ms_));
  // @@protoc_insertion_point(copy_constructor:NetProto.BulletState)
}

void BulletState::SharedCtor() {
  ::memset(&target_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&now_ms_) -
      reinterpret_cast<char*>(&target_pos_)) + sizeof(now_ms_));
}

BulletState::~BulletState() {
  // @@protoc_insertion_point(destructor:NetProto.BulletState)
  SharedDtor();
}

void BulletState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete target_pos_;
  if (this != internal_default_instance()) delete unit_pos_;
}

void BulletState::ArenaDtor(void* object) {
  BulletState* _this = reinterpret_cast< BulletState* >(object);
  (void)_this;
}
void BulletState::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void BulletState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulletState::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulletState& BulletState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_BulletState.base);
  return *internal_default_instance();
}


void BulletState::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.BulletState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_pos_ != NULL) {
    delete target_pos_;
  }
  target_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_pos_ != NULL) {
    delete unit_pos_;
  }
  unit_pos_ = NULL;
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&now_ms_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(now_ms_));
  _internal_metadata_.Clear();
}

bool BulletState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.BulletState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 target_pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 target_suid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_suid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 curr_state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curr_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 unit_pos = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 now_ms = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &now_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.BulletState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.BulletState)
  return false;
#undef DO_
}

void BulletState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.BulletState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // float speed = 2;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->speed(), output);
  }

  // .NetProto.PBVector3 target_pos = 5;
  if (this->has_target_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_target_pos(), output);
  }

  // uint64 target_suid = 6;
  if (this->target_suid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->target_suid(), output);
  }

  // int32 curr_state = 7;
  if (this->curr_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->curr_state(), output);
  }

  // .NetProto.PBVector3 unit_pos = 10;
  if (this->has_unit_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_unit_pos(), output);
  }

  // int64 now_ms = 11;
  if (this->now_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->now_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.BulletState)
}

::google::protobuf::uint8* BulletState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.BulletState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // float speed = 2;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->speed(), target);
  }

  // .NetProto.PBVector3 target_pos = 5;
  if (this->has_target_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_target_pos(), deterministic, target);
  }

  // uint64 target_suid = 6;
  if (this->target_suid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->target_suid(), target);
  }

  // int32 curr_state = 7;
  if (this->curr_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->curr_state(), target);
  }

  // .NetProto.PBVector3 unit_pos = 10;
  if (this->has_unit_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_unit_pos(), deterministic, target);
  }

  // int64 now_ms = 11;
  if (this->now_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->now_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.BulletState)
  return target;
}

size_t BulletState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.BulletState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector3 target_pos = 5;
  if (this->has_target_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_pos_);
  }

  // .NetProto.PBVector3 unit_pos = 10;
  if (this->has_unit_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_pos_);
  }

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // float speed = 2;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // int32 curr_state = 7;
  if (this->curr_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curr_state());
  }

  // uint64 target_suid = 6;
  if (this->target_suid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_suid());
  }

  // int64 now_ms = 11;
  if (this->now_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->now_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulletState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.BulletState)
  GOOGLE_DCHECK_NE(&from, this);
  const BulletState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulletState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.BulletState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.BulletState)
    MergeFrom(*source);
  }
}

void BulletState::MergeFrom(const BulletState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.BulletState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_pos()) {
    mutable_target_pos()->::NetProto::PBVector3::MergeFrom(from.target_pos());
  }
  if (from.has_unit_pos()) {
    mutable_unit_pos()->::NetProto::PBVector3::MergeFrom(from.unit_pos());
  }
  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.curr_state() != 0) {
    set_curr_state(from.curr_state());
  }
  if (from.target_suid() != 0) {
    set_target_suid(from.target_suid());
  }
  if (from.now_ms() != 0) {
    set_now_ms(from.now_ms());
  }
}

void BulletState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.BulletState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulletState::CopyFrom(const BulletState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.BulletState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulletState::IsInitialized() const {
  return true;
}

void BulletState::Swap(BulletState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BulletState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BulletState::UnsafeArenaSwap(BulletState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BulletState::InternalSwap(BulletState* other) {
  using std::swap;
  swap(target_pos_, other->target_pos_);
  swap(unit_pos_, other->unit_pos_);
  swap(su_id_, other->su_id_);
  swap(speed_, other->speed_);
  swap(curr_state_, other->curr_state_);
  swap(target_suid_, other->target_suid_);
  swap(now_ms_, other->now_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulletState::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulletTargetPos::InitAsDefaultInstance() {
  ::NetProto::_BulletTargetPos_default_instance_._instance.get_mutable()->target_pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
  ::NetProto::_BulletTargetPos_default_instance_._instance.get_mutable()->unit_pos_ = const_cast< ::NetProto::PBVector3*>(
      ::NetProto::PBVector3::internal_default_instance());
}
void BulletTargetPos::unsafe_arena_set_allocated_target_pos(
    ::NetProto::PBVector3* target_pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete target_pos_;
  }
  target_pos_ = target_pos;
  if (target_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.BulletTargetPos.target_pos)
}
void BulletTargetPos::clear_target_pos() {
  if (GetArenaNoVirtual() == NULL && target_pos_ != NULL) {
    delete target_pos_;
  }
  target_pos_ = NULL;
}
void BulletTargetPos::unsafe_arena_set_allocated_unit_pos(
    ::NetProto::PBVector3* unit_pos) {
  if (GetArenaNoVirtual() == NULL) {
    delete unit_pos_;
  }
  unit_pos_ = unit_pos;
  if (unit_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.BulletTargetPos.unit_pos)
}
void BulletTargetPos::clear_unit_pos() {
  if (GetArenaNoVirtual() == NULL && unit_pos_ != NULL) {
    delete unit_pos_;
  }
  unit_pos_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulletTargetPos::kSuIdFieldNumber;
const int BulletTargetPos::kTargetPosFieldNumber;
const int BulletTargetPos::kNowMsFieldNumber;
const int BulletTargetPos::kUnitPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulletTargetPos::BulletTargetPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Battle_2eproto::scc_info_BulletTargetPos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.BulletTargetPos)
}
BulletTargetPos::BulletTargetPos(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_BulletTargetPos.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.BulletTargetPos)
}
BulletTargetPos::BulletTargetPos(const BulletTargetPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_pos()) {
    target_pos_ = new ::NetProto::PBVector3(*from.target_pos_);
  } else {
    target_pos_ = NULL;
  }
  if (from.has_unit_pos()) {
    unit_pos_ = new ::NetProto::PBVector3(*from.unit_pos_);
  } else {
    unit_pos_ = NULL;
  }
  ::memcpy(&su_id_, &from.su_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&now_ms_) -
    reinterpret_cast<char*>(&su_id_)) + sizeof(now_ms_));
  // @@protoc_insertion_point(copy_constructor:NetProto.BulletTargetPos)
}

void BulletTargetPos::SharedCtor() {
  ::memset(&target_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&now_ms_) -
      reinterpret_cast<char*>(&target_pos_)) + sizeof(now_ms_));
}

BulletTargetPos::~BulletTargetPos() {
  // @@protoc_insertion_point(destructor:NetProto.BulletTargetPos)
  SharedDtor();
}

void BulletTargetPos::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete target_pos_;
  if (this != internal_default_instance()) delete unit_pos_;
}

void BulletTargetPos::ArenaDtor(void* object) {
  BulletTargetPos* _this = reinterpret_cast< BulletTargetPos* >(object);
  (void)_this;
}
void BulletTargetPos::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void BulletTargetPos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulletTargetPos::descriptor() {
  ::protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulletTargetPos& BulletTargetPos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Battle_2eproto::scc_info_BulletTargetPos.base);
  return *internal_default_instance();
}


void BulletTargetPos::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.BulletTargetPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_pos_ != NULL) {
    delete target_pos_;
  }
  target_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_pos_ != NULL) {
    delete unit_pos_;
  }
  unit_pos_ = NULL;
  ::memset(&su_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&now_ms_) -
      reinterpret_cast<char*>(&su_id_)) + sizeof(now_ms_));
  _internal_metadata_.Clear();
}

bool BulletTargetPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.BulletTargetPos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 su_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &su_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 target_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 now_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &now_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PBVector3 unit_pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.BulletTargetPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.BulletTargetPos)
  return false;
#undef DO_
}

void BulletTargetPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.BulletTargetPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->su_id(), output);
  }

  // .NetProto.PBVector3 target_pos = 2;
  if (this->has_target_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_target_pos(), output);
  }

  // int64 now_ms = 3;
  if (this->now_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->now_ms(), output);
  }

  // .NetProto.PBVector3 unit_pos = 4;
  if (this->has_unit_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_unit_pos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.BulletTargetPos)
}

::google::protobuf::uint8* BulletTargetPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.BulletTargetPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->su_id(), target);
  }

  // .NetProto.PBVector3 target_pos = 2;
  if (this->has_target_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_target_pos(), deterministic, target);
  }

  // int64 now_ms = 3;
  if (this->now_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->now_ms(), target);
  }

  // .NetProto.PBVector3 unit_pos = 4;
  if (this->has_unit_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_unit_pos(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.BulletTargetPos)
  return target;
}

size_t BulletTargetPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.BulletTargetPos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NetProto.PBVector3 target_pos = 2;
  if (this->has_target_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_pos_);
  }

  // .NetProto.PBVector3 unit_pos = 4;
  if (this->has_unit_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_pos_);
  }

  // uint64 su_id = 1;
  if (this->su_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->su_id());
  }

  // int64 now_ms = 3;
  if (this->now_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->now_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulletTargetPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.BulletTargetPos)
  GOOGLE_DCHECK_NE(&from, this);
  const BulletTargetPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulletTargetPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.BulletTargetPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.BulletTargetPos)
    MergeFrom(*source);
  }
}

void BulletTargetPos::MergeFrom(const BulletTargetPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.BulletTargetPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_pos()) {
    mutable_target_pos()->::NetProto::PBVector3::MergeFrom(from.target_pos());
  }
  if (from.has_unit_pos()) {
    mutable_unit_pos()->::NetProto::PBVector3::MergeFrom(from.unit_pos());
  }
  if (from.su_id() != 0) {
    set_su_id(from.su_id());
  }
  if (from.now_ms() != 0) {
    set_now_ms(from.now_ms());
  }
}

void BulletTargetPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.BulletTargetPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulletTargetPos::CopyFrom(const BulletTargetPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.BulletTargetPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulletTargetPos::IsInitialized() const {
  return true;
}

void BulletTargetPos::Swap(BulletTargetPos* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BulletTargetPos* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BulletTargetPos::UnsafeArenaSwap(BulletTargetPos* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BulletTargetPos::InternalSwap(BulletTargetPos* other) {
  using std::swap;
  swap(target_pos_, other->target_pos_);
  swap(unit_pos_, other->unit_pos_);
  swap(su_id_, other->su_id_);
  swap(now_ms_, other->now_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulletTargetPos::GetMetadata() const {
  protobuf_Battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NetProto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::RspFreeHero* Arena::CreateMaybeMessage< ::NetProto::RspFreeHero >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::RspFreeHero >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::SelectHeroReq* Arena::CreateMaybeMessage< ::NetProto::SelectHeroReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::SelectHeroReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::SelectHeroRsp* Arena::CreateMaybeMessage< ::NetProto::SelectHeroRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::SelectHeroRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::SceneObjectDisappear* Arena::CreateMaybeMessage< ::NetProto::SceneObjectDisappear >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::SceneObjectDisappear >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::MoveToPos* Arena::CreateMaybeMessage< ::NetProto::MoveToPos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::MoveToPos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::BattleOperation* Arena::CreateMaybeMessage< ::NetProto::BattleOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::BattleOperation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::ViewGrid* Arena::CreateMaybeMessage< ::NetProto::ViewGrid >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::ViewGrid >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::ViewSnapshotDiff* Arena::CreateMaybeMessage< ::NetProto::ViewSnapshotDiff >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::ViewSnapshotDiff >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::ViewSnapshot* Arena::CreateMaybeMessage< ::NetProto::ViewSnapshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::ViewSnapshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::ViewAllGrids* Arena::CreateMaybeMessage< ::NetProto::ViewAllGrids >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::ViewAllGrids >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::SceneUnitState* Arena::CreateMaybeMessage< ::NetProto::SceneUnitState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::SceneUnitState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::SceneUnitTransform* Arena::CreateMaybeMessage< ::NetProto::SceneUnitTransform >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::SceneUnitTransform >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::SceneUnitMove* Arena::CreateMaybeMessage< ::NetProto::SceneUnitMove >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::SceneUnitMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::SceneUnitSkillAction* Arena::CreateMaybeMessage< ::NetProto::SceneUnitSkillAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::SceneUnitSkillAction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::SceneTimeSync* Arena::CreateMaybeMessage< ::NetProto::SceneTimeSync >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::SceneTimeSync >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::BulletState* Arena::CreateMaybeMessage< ::NetProto::BulletState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::BulletState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::BulletTargetPos* Arena::CreateMaybeMessage< ::NetProto::BulletTargetPos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::BulletTargetPos >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
