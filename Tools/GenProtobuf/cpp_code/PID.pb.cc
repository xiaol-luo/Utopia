// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PID.proto

#include "PID.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace NetProto {
}  // namespace NetProto
namespace protobuf_PID_2eproto {
void InitDefaults() {
}

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "PID.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, file_level_enum_descriptors, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tPID.proto\022\010NetProto*\365\003\n\003PID\022\013\n\007PID_Min"
      "\020\000\022\014\n\010PID_Ping\020\001\022\014\n\010PID_Pong\020\002\022\025\n\021PID_Qu"
      "eryFreeHero\020d\022\023\n\017PID_RspFreeHero\020e\022\025\n\021PI"
      "D_SelectHeroReq\020f\022\025\n\021PID_SelectHeroRsp\020g"
      "\022\031\n\025PID_LoadSceneComplete\020h\022\022\n\016PID_Leave"
      "Scene\020i\022\035\n\030PID_SceneObjectDisappear\020\362\007\022\022"
      "\n\rPID_MoveToPos\020\374\007\022\021\n\014PID_StopMove\020\206\010\022\027\n"
      "\022PID_BattleOperaReq\020\314\010\022\025\n\020PID_ViewSnapsh"
      "ot\020\326\010\022\025\n\020PID_ViewAllGrids\020\327\010\022\031\n\024PID_View"
      "SnapshotDiff\020\330\010\022\027\n\022PID_SceneUnitState\020\260\t"
      "\022\033\n\026PID_SceneUnitTransform\020\261\t\022\026\n\021PID_Sce"
      "neUnitMove\020\262\t\022\035\n\030PID_SceneUnitSkillActio"
      "n\020\263\t\022\031\n\024PID_ReloadLuaScripts\020\241\037\022\014\n\007PID_M"
      "ax\020\200(B\003\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 538);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PID.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_PID_2eproto
namespace NetProto {
const ::google::protobuf::EnumDescriptor* PID_descriptor() {
  protobuf_PID_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PID_2eproto::file_level_enum_descriptors[0];
}
bool PID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 1010:
    case 1020:
    case 1030:
    case 1100:
    case 1110:
    case 1111:
    case 1112:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 4001:
    case 5120:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NetProto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
