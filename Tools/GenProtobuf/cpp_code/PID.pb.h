// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PID.proto

#ifndef PROTOBUF_INCLUDED_PID_2eproto
#define PROTOBUF_INCLUDED_PID_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_PID_2eproto 

namespace protobuf_PID_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_PID_2eproto
namespace NetProto {
}  // namespace NetProto
namespace NetProto {

enum PID {
  PID_Min = 0,
  PID_Ping = 1,
  PID_Pong = 2,
  PID_QueryFreeHero = 100,
  PID_RspFreeHero = 101,
  PID_SelectHeroReq = 102,
  PID_SelectHeroRsp = 103,
  PID_LoadSceneComplete = 104,
  PID_LeaveScene = 105,
  PID_SceneObjectDisappear = 1010,
  PID_MoveToPos = 1020,
  PID_StopMove = 1030,
  PID_BattleOperaReq = 1100,
  PID_ViewSnapshot = 1110,
  PID_ViewAllGrids = 1111,
  PID_ViewSnapshotDiff = 1112,
  PID_SceneUnitState = 1200,
  PID_SceneUnitTransform = 1201,
  PID_SceneUnitMove = 1202,
  PID_SceneUnitSkillAction = 1203,
  PID_ReloadLuaScripts = 4001,
  PID_RecreateSceneReq = 4002,
  PID_RecreateSceneRsp = 4003,
  PID_Max = 5120,
  PID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PID_IsValid(int value);
const PID PID_MIN = PID_Min;
const PID PID_MAX = PID_Max;
const int PID_ARRAYSIZE = PID_MAX + 1;

const ::google::protobuf::EnumDescriptor* PID_descriptor();
inline const ::std::string& PID_Name(PID value) {
  return ::google::protobuf::internal::NameOfEnum(
    PID_descriptor(), value);
}
inline bool PID_Parse(
    const ::std::string& name, PID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PID>(
    PID_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace NetProto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::PID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::PID>() {
  return ::NetProto::PID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_PID_2eproto
