// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: try.proto

#include "try.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_try_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_try_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TryItem;
}  // namespace protobuf_try_2eproto
namespace NetProto {
class TryItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TryItem>
      _instance;
} _TryItem_default_instance_;
class TryMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TryMsg>
      _instance;
} _TryMsg_default_instance_;
}  // namespace NetProto
namespace protobuf_try_2eproto {
static void InitDefaultsTryItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_TryItem_default_instance_;
    new (ptr) ::NetProto::TryItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::TryItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TryItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTryItem}, {}};

static void InitDefaultsTryMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProto::_TryMsg_default_instance_;
    new (ptr) ::NetProto::TryMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProto::TryMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TryMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTryMsg}, {
      &protobuf_try_2eproto::scc_info_TryItem.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TryItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TryMsg.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryItem, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryItem, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryMsg, int_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryMsg, str_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryMsg, msg_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryMsg, enum_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryMsg, nest_enum_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryMsg, msg_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProto::TryMsg, nest_enum_array_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NetProto::TryItem)},
  { 7, -1, sizeof(::NetProto::TryMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_TryItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProto::_TryMsg_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "try.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ttry.proto\022\010NetProto\"#\n\007TryItem\022\n\n\002id\030\001"
      " \001(\005\022\014\n\004name\030\002 \001(\t\"\242\002\n\006TryMsg\022\017\n\007int_val"
      "\030\001 \001(\005\022\017\n\007str_val\030\002 \001(\t\022\"\n\007msg_val\030\003 \001(\013"
      "2\021.NetProto.TryItem\022#\n\010enum_val\030\004 \001(\0162\021."
      "NetProto.TryEnum\0223\n\rnest_enum_val\030\005 \001(\0162"
      "\034.NetProto.TryMsg.TryNestEnum\022$\n\tmsg_arr"
      "ay\030\006 \003(\0132\021.NetProto.TryItem\0225\n\017nest_enum"
      "_array\030\007 \003(\0162\034.NetProto.TryMsg.TryNestEn"
      "um\"\033\n\013TryNestEnum\022\005\n\001a\020\000\022\005\n\001b\020\001*\027\n\007TryEn"
      "um\022\005\n\001a\020\000\022\005\n\001b\020\001B\003\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 389);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "try.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_try_2eproto
namespace NetProto {
const ::google::protobuf::EnumDescriptor* TryMsg_TryNestEnum_descriptor() {
  protobuf_try_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_try_2eproto::file_level_enum_descriptors[0];
}
bool TryMsg_TryNestEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TryMsg_TryNestEnum TryMsg::a;
const TryMsg_TryNestEnum TryMsg::b;
const TryMsg_TryNestEnum TryMsg::TryNestEnum_MIN;
const TryMsg_TryNestEnum TryMsg::TryNestEnum_MAX;
const int TryMsg::TryNestEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TryEnum_descriptor() {
  protobuf_try_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_try_2eproto::file_level_enum_descriptors[1];
}
bool TryEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TryItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TryItem::kIdFieldNumber;
const int TryItem::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TryItem::TryItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_try_2eproto::scc_info_TryItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.TryItem)
}
TryItem::TryItem(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_try_2eproto::scc_info_TryItem.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.TryItem)
}
TryItem::TryItem(const TryItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:NetProto.TryItem)
}

void TryItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

TryItem::~TryItem() {
  // @@protoc_insertion_point(destructor:NetProto.TryItem)
  SharedDtor();
}

void TryItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TryItem::ArenaDtor(void* object) {
  TryItem* _this = reinterpret_cast< TryItem* >(object);
  (void)_this;
}
void TryItem::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TryItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TryItem::descriptor() {
  ::protobuf_try_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_try_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TryItem& TryItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_try_2eproto::scc_info_TryItem.base);
  return *internal_default_instance();
}


void TryItem::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.TryItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool TryItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.TryItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.TryItem.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.TryItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.TryItem)
  return false;
#undef DO_
}

void TryItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.TryItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.TryItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.TryItem)
}

::google::protobuf::uint8* TryItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.TryItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.TryItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.TryItem)
  return target;
}

size_t TryItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.TryItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TryItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.TryItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TryItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TryItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.TryItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.TryItem)
    MergeFrom(*source);
  }
}

void TryItem::MergeFrom(const TryItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.TryItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void TryItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.TryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TryItem::CopyFrom(const TryItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.TryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TryItem::IsInitialized() const {
  return true;
}

void TryItem::Swap(TryItem* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TryItem* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TryItem::UnsafeArenaSwap(TryItem* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TryItem::InternalSwap(TryItem* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TryItem::GetMetadata() const {
  protobuf_try_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_try_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TryMsg::InitAsDefaultInstance() {
  ::NetProto::_TryMsg_default_instance_._instance.get_mutable()->msg_val_ = const_cast< ::NetProto::TryItem*>(
      ::NetProto::TryItem::internal_default_instance());
}
void TryMsg::unsafe_arena_set_allocated_msg_val(
    ::NetProto::TryItem* msg_val) {
  if (GetArenaNoVirtual() == NULL) {
    delete msg_val_;
  }
  msg_val_ = msg_val;
  if (msg_val) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NetProto.TryMsg.msg_val)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TryMsg::kIntValFieldNumber;
const int TryMsg::kStrValFieldNumber;
const int TryMsg::kMsgValFieldNumber;
const int TryMsg::kEnumValFieldNumber;
const int TryMsg::kNestEnumValFieldNumber;
const int TryMsg::kMsgArrayFieldNumber;
const int TryMsg::kNestEnumArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TryMsg::TryMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_try_2eproto::scc_info_TryMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.TryMsg)
}
TryMsg::TryMsg(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  msg_array_(arena),
  nest_enum_array_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_try_2eproto::scc_info_TryMsg.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetProto.TryMsg)
}
TryMsg::TryMsg(const TryMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_array_(from.msg_array_),
      nest_enum_array_(from.nest_enum_array_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str_val().size() > 0) {
    str_val_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_val(),
      GetArenaNoVirtual());
  }
  if (from.has_msg_val()) {
    msg_val_ = new ::NetProto::TryItem(*from.msg_val_);
  } else {
    msg_val_ = NULL;
  }
  ::memcpy(&int_val_, &from.int_val_,
    static_cast<size_t>(reinterpret_cast<char*>(&nest_enum_val_) -
    reinterpret_cast<char*>(&int_val_)) + sizeof(nest_enum_val_));
  // @@protoc_insertion_point(copy_constructor:NetProto.TryMsg)
}

void TryMsg::SharedCtor() {
  str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_val_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nest_enum_val_) -
      reinterpret_cast<char*>(&msg_val_)) + sizeof(nest_enum_val_));
}

TryMsg::~TryMsg() {
  // @@protoc_insertion_point(destructor:NetProto.TryMsg)
  SharedDtor();
}

void TryMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  str_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_val_;
}

void TryMsg::ArenaDtor(void* object) {
  TryMsg* _this = reinterpret_cast< TryMsg* >(object);
  (void)_this;
}
void TryMsg::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TryMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TryMsg::descriptor() {
  ::protobuf_try_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_try_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TryMsg& TryMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_try_2eproto::scc_info_TryMsg.base);
  return *internal_default_instance();
}


void TryMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.TryMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_array_.Clear();
  nest_enum_array_.Clear();
  str_val_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && msg_val_ != NULL) {
    delete msg_val_;
  }
  msg_val_ = NULL;
  ::memset(&int_val_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nest_enum_val_) -
      reinterpret_cast<char*>(&int_val_)) + sizeof(nest_enum_val_));
  _internal_metadata_.Clear();
}

bool TryMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.TryMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 int_val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_val().data(), static_cast<int>(this->str_val().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.TryMsg.str_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.TryItem msg_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.TryEnum enum_val = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_val(static_cast< ::NetProto::TryEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.TryMsg.TryNestEnum nest_enum_val = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nest_enum_val(static_cast< ::NetProto::TryMsg_TryNestEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.TryItem msg_array = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msg_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.TryMsg.TryNestEnum nest_enum_array = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value = 0;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_nest_enum_array(static_cast< ::NetProto::TryMsg_TryNestEnum >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_nest_enum_array(static_cast< ::NetProto::TryMsg_TryNestEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.TryMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.TryMsg)
  return false;
#undef DO_
}

void TryMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.TryMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 int_val = 1;
  if (this->int_val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->int_val(), output);
  }

  // string str_val = 2;
  if (this->str_val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_val().data(), static_cast<int>(this->str_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.TryMsg.str_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_val(), output);
  }

  // .NetProto.TryItem msg_val = 3;
  if (this->has_msg_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_msg_val(), output);
  }

  // .NetProto.TryEnum enum_val = 4;
  if (this->enum_val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->enum_val(), output);
  }

  // .NetProto.TryMsg.TryNestEnum nest_enum_val = 5;
  if (this->nest_enum_val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->nest_enum_val(), output);
  }

  // repeated .NetProto.TryItem msg_array = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_array_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->msg_array(static_cast<int>(i)),
      output);
  }

  // repeated .NetProto.TryMsg.TryNestEnum nest_enum_array = 7;
  if (this->nest_enum_array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_nest_enum_array_cached_byte_size_));
  }
  for (int i = 0, n = this->nest_enum_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->nest_enum_array(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProto.TryMsg)
}

::google::protobuf::uint8* TryMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.TryMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 int_val = 1;
  if (this->int_val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->int_val(), target);
  }

  // string str_val = 2;
  if (this->str_val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_val().data(), static_cast<int>(this->str_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.TryMsg.str_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str_val(), target);
  }

  // .NetProto.TryItem msg_val = 3;
  if (this->has_msg_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_msg_val(), deterministic, target);
  }

  // .NetProto.TryEnum enum_val = 4;
  if (this->enum_val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->enum_val(), target);
  }

  // .NetProto.TryMsg.TryNestEnum nest_enum_val = 5;
  if (this->nest_enum_val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->nest_enum_val(), target);
  }

  // repeated .NetProto.TryItem msg_array = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_array_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->msg_array(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NetProto.TryMsg.TryNestEnum nest_enum_array = 7;
  if (this->nest_enum_array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _nest_enum_array_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->nest_enum_array_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProto.TryMsg)
  return target;
}

size_t TryMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.TryMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NetProto.TryItem msg_array = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_array_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg_array(static_cast<int>(i)));
    }
  }

  // repeated .NetProto.TryMsg.TryNestEnum nest_enum_array = 7;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->nest_enum_array_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->nest_enum_array(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nest_enum_array_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string str_val = 2;
  if (this->str_val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str_val());
  }

  // .NetProto.TryItem msg_val = 3;
  if (this->has_msg_val()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_val_);
  }

  // int32 int_val = 1;
  if (this->int_val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_val());
  }

  // .NetProto.TryEnum enum_val = 4;
  if (this->enum_val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_val());
  }

  // .NetProto.TryMsg.TryNestEnum nest_enum_val = 5;
  if (this->nest_enum_val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nest_enum_val());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TryMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.TryMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TryMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TryMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.TryMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.TryMsg)
    MergeFrom(*source);
  }
}

void TryMsg::MergeFrom(const TryMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.TryMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_array_.MergeFrom(from.msg_array_);
  nest_enum_array_.MergeFrom(from.nest_enum_array_);
  if (from.str_val().size() > 0) {
    set_str_val(from.str_val());
  }
  if (from.has_msg_val()) {
    mutable_msg_val()->::NetProto::TryItem::MergeFrom(from.msg_val());
  }
  if (from.int_val() != 0) {
    set_int_val(from.int_val());
  }
  if (from.enum_val() != 0) {
    set_enum_val(from.enum_val());
  }
  if (from.nest_enum_val() != 0) {
    set_nest_enum_val(from.nest_enum_val());
  }
}

void TryMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.TryMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TryMsg::CopyFrom(const TryMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.TryMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TryMsg::IsInitialized() const {
  return true;
}

void TryMsg::Swap(TryMsg* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TryMsg* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TryMsg::UnsafeArenaSwap(TryMsg* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TryMsg::InternalSwap(TryMsg* other) {
  using std::swap;
  CastToBase(&msg_array_)->InternalSwap(CastToBase(&other->msg_array_));
  nest_enum_array_.InternalSwap(&other->nest_enum_array_);
  str_val_.Swap(&other->str_val_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_val_, other->msg_val_);
  swap(int_val_, other->int_val_);
  swap(enum_val_, other->enum_val_);
  swap(nest_enum_val_, other->nest_enum_val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TryMsg::GetMetadata() const {
  protobuf_try_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_try_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NetProto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::TryItem* Arena::CreateMaybeMessage< ::NetProto::TryItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::TryItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProto::TryMsg* Arena::CreateMaybeMessage< ::NetProto::TryMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetProto::TryMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
