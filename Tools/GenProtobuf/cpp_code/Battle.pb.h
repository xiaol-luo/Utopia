// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Battle.proto

#ifndef PROTOBUF_INCLUDED_Battle_2eproto
#define PROTOBUF_INCLUDED_Battle_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
#include "BattleEnum.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Battle_2eproto 

namespace protobuf_Battle_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Battle_2eproto
namespace NetProto {
class BattleOperation;
class BattleOperationDefaultTypeInternal;
extern BattleOperationDefaultTypeInternal _BattleOperation_default_instance_;
class MoveToPos;
class MoveToPosDefaultTypeInternal;
extern MoveToPosDefaultTypeInternal _MoveToPos_default_instance_;
class RspFreeHero;
class RspFreeHeroDefaultTypeInternal;
extern RspFreeHeroDefaultTypeInternal _RspFreeHero_default_instance_;
class SceneObjectDisappear;
class SceneObjectDisappearDefaultTypeInternal;
extern SceneObjectDisappearDefaultTypeInternal _SceneObjectDisappear_default_instance_;
class SceneUnitMove;
class SceneUnitMoveDefaultTypeInternal;
extern SceneUnitMoveDefaultTypeInternal _SceneUnitMove_default_instance_;
class SceneUnitSkillAction;
class SceneUnitSkillActionDefaultTypeInternal;
extern SceneUnitSkillActionDefaultTypeInternal _SceneUnitSkillAction_default_instance_;
class SceneUnitState;
class SceneUnitStateDefaultTypeInternal;
extern SceneUnitStateDefaultTypeInternal _SceneUnitState_default_instance_;
class SceneUnitTransform;
class SceneUnitTransformDefaultTypeInternal;
extern SceneUnitTransformDefaultTypeInternal _SceneUnitTransform_default_instance_;
class SelectHeroReq;
class SelectHeroReqDefaultTypeInternal;
extern SelectHeroReqDefaultTypeInternal _SelectHeroReq_default_instance_;
class SelectHeroRsp;
class SelectHeroRspDefaultTypeInternal;
extern SelectHeroRspDefaultTypeInternal _SelectHeroRsp_default_instance_;
class ViewAllGrids;
class ViewAllGridsDefaultTypeInternal;
extern ViewAllGridsDefaultTypeInternal _ViewAllGrids_default_instance_;
class ViewGrid;
class ViewGridDefaultTypeInternal;
extern ViewGridDefaultTypeInternal _ViewGrid_default_instance_;
class ViewSnapshot;
class ViewSnapshotDefaultTypeInternal;
extern ViewSnapshotDefaultTypeInternal _ViewSnapshot_default_instance_;
class ViewSnapshotDiff;
class ViewSnapshotDiffDefaultTypeInternal;
extern ViewSnapshotDiffDefaultTypeInternal _ViewSnapshotDiff_default_instance_;
}  // namespace NetProto
namespace google {
namespace protobuf {
template<> ::NetProto::BattleOperation* Arena::CreateMaybeMessage<::NetProto::BattleOperation>(Arena*);
template<> ::NetProto::MoveToPos* Arena::CreateMaybeMessage<::NetProto::MoveToPos>(Arena*);
template<> ::NetProto::RspFreeHero* Arena::CreateMaybeMessage<::NetProto::RspFreeHero>(Arena*);
template<> ::NetProto::SceneObjectDisappear* Arena::CreateMaybeMessage<::NetProto::SceneObjectDisappear>(Arena*);
template<> ::NetProto::SceneUnitMove* Arena::CreateMaybeMessage<::NetProto::SceneUnitMove>(Arena*);
template<> ::NetProto::SceneUnitSkillAction* Arena::CreateMaybeMessage<::NetProto::SceneUnitSkillAction>(Arena*);
template<> ::NetProto::SceneUnitState* Arena::CreateMaybeMessage<::NetProto::SceneUnitState>(Arena*);
template<> ::NetProto::SceneUnitTransform* Arena::CreateMaybeMessage<::NetProto::SceneUnitTransform>(Arena*);
template<> ::NetProto::SelectHeroReq* Arena::CreateMaybeMessage<::NetProto::SelectHeroReq>(Arena*);
template<> ::NetProto::SelectHeroRsp* Arena::CreateMaybeMessage<::NetProto::SelectHeroRsp>(Arena*);
template<> ::NetProto::ViewAllGrids* Arena::CreateMaybeMessage<::NetProto::ViewAllGrids>(Arena*);
template<> ::NetProto::ViewGrid* Arena::CreateMaybeMessage<::NetProto::ViewGrid>(Arena*);
template<> ::NetProto::ViewSnapshot* Arena::CreateMaybeMessage<::NetProto::ViewSnapshot>(Arena*);
template<> ::NetProto::ViewSnapshotDiff* Arena::CreateMaybeMessage<::NetProto::ViewSnapshotDiff>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace NetProto {

// ===================================================================

class RspFreeHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.RspFreeHero) */ {
 public:
  RspFreeHero();
  virtual ~RspFreeHero();

  RspFreeHero(const RspFreeHero& from);

  inline RspFreeHero& operator=(const RspFreeHero& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspFreeHero(RspFreeHero&& from) noexcept
    : RspFreeHero() {
    *this = ::std::move(from);
  }

  inline RspFreeHero& operator=(RspFreeHero&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspFreeHero& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspFreeHero* internal_default_instance() {
    return reinterpret_cast<const RspFreeHero*>(
               &_RspFreeHero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(RspFreeHero* other);
  void Swap(RspFreeHero* other);
  friend void swap(RspFreeHero& a, RspFreeHero& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspFreeHero* New() const final {
    return CreateMaybeMessage<RspFreeHero>(NULL);
  }

  RspFreeHero* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RspFreeHero>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RspFreeHero& from);
  void MergeFrom(const RspFreeHero& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspFreeHero* other);
  protected:
  explicit RspFreeHero(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 red_hero_id = 1;
  void clear_red_hero_id();
  static const int kRedHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 red_hero_id() const;
  void set_red_hero_id(::google::protobuf::uint64 value);

  // uint64 blue_hero_id = 2;
  void clear_blue_hero_id();
  static const int kBlueHeroIdFieldNumber = 2;
  ::google::protobuf::uint64 blue_hero_id() const;
  void set_blue_hero_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetProto.RspFreeHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint64 red_hero_id_;
  ::google::protobuf::uint64 blue_hero_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectHeroReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SelectHeroReq) */ {
 public:
  SelectHeroReq();
  virtual ~SelectHeroReq();

  SelectHeroReq(const SelectHeroReq& from);

  inline SelectHeroReq& operator=(const SelectHeroReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectHeroReq(SelectHeroReq&& from) noexcept
    : SelectHeroReq() {
    *this = ::std::move(from);
  }

  inline SelectHeroReq& operator=(SelectHeroReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectHeroReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SelectHeroReq* internal_default_instance() {
    return reinterpret_cast<const SelectHeroReq*>(
               &_SelectHeroReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(SelectHeroReq* other);
  void Swap(SelectHeroReq* other);
  friend void swap(SelectHeroReq& a, SelectHeroReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectHeroReq* New() const final {
    return CreateMaybeMessage<SelectHeroReq>(NULL);
  }

  SelectHeroReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SelectHeroReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SelectHeroReq& from);
  void MergeFrom(const SelectHeroReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelectHeroReq* other);
  protected:
  explicit SelectHeroReq(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 hero_id = 1;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 hero_id() const;
  void set_hero_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetProto.SelectHeroReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint64 hero_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectHeroRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SelectHeroRsp) */ {
 public:
  SelectHeroRsp();
  virtual ~SelectHeroRsp();

  SelectHeroRsp(const SelectHeroRsp& from);

  inline SelectHeroRsp& operator=(const SelectHeroRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectHeroRsp(SelectHeroRsp&& from) noexcept
    : SelectHeroRsp() {
    *this = ::std::move(from);
  }

  inline SelectHeroRsp& operator=(SelectHeroRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectHeroRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SelectHeroRsp* internal_default_instance() {
    return reinterpret_cast<const SelectHeroRsp*>(
               &_SelectHeroRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(SelectHeroRsp* other);
  void Swap(SelectHeroRsp* other);
  friend void swap(SelectHeroRsp& a, SelectHeroRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectHeroRsp* New() const final {
    return CreateMaybeMessage<SelectHeroRsp>(NULL);
  }

  SelectHeroRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SelectHeroRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SelectHeroRsp& from);
  void MergeFrom(const SelectHeroRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelectHeroRsp* other);
  protected:
  explicit SelectHeroRsp(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 hero_id = 1;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 hero_id() const;
  void set_hero_id(::google::protobuf::uint64 value);

  // bool is_succ = 2;
  void clear_is_succ();
  static const int kIsSuccFieldNumber = 2;
  bool is_succ() const;
  void set_is_succ(bool value);

  // @@protoc_insertion_point(class_scope:NetProto.SelectHeroRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint64 hero_id_;
  bool is_succ_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneObjectDisappear : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SceneObjectDisappear) */ {
 public:
  SceneObjectDisappear();
  virtual ~SceneObjectDisappear();

  SceneObjectDisappear(const SceneObjectDisappear& from);

  inline SceneObjectDisappear& operator=(const SceneObjectDisappear& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneObjectDisappear(SceneObjectDisappear&& from) noexcept
    : SceneObjectDisappear() {
    *this = ::std::move(from);
  }

  inline SceneObjectDisappear& operator=(SceneObjectDisappear&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneObjectDisappear& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneObjectDisappear* internal_default_instance() {
    return reinterpret_cast<const SceneObjectDisappear*>(
               &_SceneObjectDisappear_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(SceneObjectDisappear* other);
  void Swap(SceneObjectDisappear* other);
  friend void swap(SceneObjectDisappear& a, SceneObjectDisappear& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneObjectDisappear* New() const final {
    return CreateMaybeMessage<SceneObjectDisappear>(NULL);
  }

  SceneObjectDisappear* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SceneObjectDisappear>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SceneObjectDisappear& from);
  void MergeFrom(const SceneObjectDisappear& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SceneObjectDisappear* other);
  protected:
  explicit SceneObjectDisappear(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 objids = 1;
  int objids_size() const;
  void clear_objids();
  static const int kObjidsFieldNumber = 1;
  ::google::protobuf::uint64 objids(int index) const;
  void set_objids(int index, ::google::protobuf::uint64 value);
  void add_objids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      objids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_objids();

  // @@protoc_insertion_point(class_scope:NetProto.SceneObjectDisappear)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > objids_;
  mutable int _objids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoveToPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.MoveToPos) */ {
 public:
  MoveToPos();
  virtual ~MoveToPos();

  MoveToPos(const MoveToPos& from);

  inline MoveToPos& operator=(const MoveToPos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoveToPos(MoveToPos&& from) noexcept
    : MoveToPos() {
    *this = ::std::move(from);
  }

  inline MoveToPos& operator=(MoveToPos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveToPos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoveToPos* internal_default_instance() {
    return reinterpret_cast<const MoveToPos*>(
               &_MoveToPos_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(MoveToPos* other);
  void Swap(MoveToPos* other);
  friend void swap(MoveToPos& a, MoveToPos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoveToPos* New() const final {
    return CreateMaybeMessage<MoveToPos>(NULL);
  }

  MoveToPos* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MoveToPos>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MoveToPos& from);
  void MergeFrom(const MoveToPos& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveToPos* other);
  protected:
  explicit MoveToPos(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.PBVector2 pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  private:
  const ::NetProto::PBVector2& _internal_pos() const;
  public:
  const ::NetProto::PBVector2& pos() const;
  ::NetProto::PBVector2* release_pos();
  ::NetProto::PBVector2* mutable_pos();
  void set_allocated_pos(::NetProto::PBVector2* pos);
  void unsafe_arena_set_allocated_pos(
      ::NetProto::PBVector2* pos);
  ::NetProto::PBVector2* unsafe_arena_release_pos();

  // @@protoc_insertion_point(class_scope:NetProto.MoveToPos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::NetProto::PBVector2* pos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BattleOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.BattleOperation) */ {
 public:
  BattleOperation();
  virtual ~BattleOperation();

  BattleOperation(const BattleOperation& from);

  inline BattleOperation& operator=(const BattleOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BattleOperation(BattleOperation&& from) noexcept
    : BattleOperation() {
    *this = ::std::move(from);
  }

  inline BattleOperation& operator=(BattleOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BattleOperation* internal_default_instance() {
    return reinterpret_cast<const BattleOperation*>(
               &_BattleOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(BattleOperation* other);
  void Swap(BattleOperation* other);
  friend void swap(BattleOperation& a, BattleOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BattleOperation* New() const final {
    return CreateMaybeMessage<BattleOperation>(NULL);
  }

  BattleOperation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BattleOperation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BattleOperation& from);
  void MergeFrom(const BattleOperation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BattleOperation* other);
  protected:
  explicit BattleOperation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.PBVector2 pos = 4;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  private:
  const ::NetProto::PBVector2& _internal_pos() const;
  public:
  const ::NetProto::PBVector2& pos() const;
  ::NetProto::PBVector2* release_pos();
  ::NetProto::PBVector2* mutable_pos();
  void set_allocated_pos(::NetProto::PBVector2* pos);
  void unsafe_arena_set_allocated_pos(
      ::NetProto::PBVector2* pos);
  ::NetProto::PBVector2* unsafe_arena_release_pos();

  // uint64 target_id = 2;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  ::google::protobuf::uint64 target_id() const;
  void set_target_id(::google::protobuf::uint64 value);

  // .NetProto.EPlayerOpera opera = 1;
  void clear_opera();
  static const int kOperaFieldNumber = 1;
  ::NetProto::EPlayerOpera opera() const;
  void set_opera(::NetProto::EPlayerOpera value);

  // float dir = 3;
  void clear_dir();
  static const int kDirFieldNumber = 3;
  float dir() const;
  void set_dir(float value);

  // .NetProto.ESkillSlot skill_slot = 5;
  void clear_skill_slot();
  static const int kSkillSlotFieldNumber = 5;
  ::NetProto::ESkillSlot skill_slot() const;
  void set_skill_slot(::NetProto::ESkillSlot value);

  // @@protoc_insertion_point(class_scope:NetProto.BattleOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::NetProto::PBVector2* pos_;
  ::google::protobuf::uint64 target_id_;
  int opera_;
  float dir_;
  int skill_slot_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ViewGrid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.ViewGrid) */ {
 public:
  ViewGrid();
  virtual ~ViewGrid();

  ViewGrid(const ViewGrid& from);

  inline ViewGrid& operator=(const ViewGrid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ViewGrid(ViewGrid&& from) noexcept
    : ViewGrid() {
    *this = ::std::move(from);
  }

  inline ViewGrid& operator=(ViewGrid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewGrid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ViewGrid* internal_default_instance() {
    return reinterpret_cast<const ViewGrid*>(
               &_ViewGrid_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ViewGrid* other);
  void Swap(ViewGrid* other);
  friend void swap(ViewGrid& a, ViewGrid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ViewGrid* New() const final {
    return CreateMaybeMessage<ViewGrid>(NULL);
  }

  ViewGrid* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ViewGrid>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ViewGrid& from);
  void MergeFrom(const ViewGrid& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewGrid* other);
  protected:
  explicit ViewGrid(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.PBVector2 center = 1;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 1;
  private:
  const ::NetProto::PBVector2& _internal_center() const;
  public:
  const ::NetProto::PBVector2& center() const;
  ::NetProto::PBVector2* release_center();
  ::NetProto::PBVector2* mutable_center();
  void set_allocated_center(::NetProto::PBVector2* center);
  void unsafe_arena_set_allocated_center(
      ::NetProto::PBVector2* center);
  ::NetProto::PBVector2* unsafe_arena_release_center();

  // int32 grid_type = 2;
  void clear_grid_type();
  static const int kGridTypeFieldNumber = 2;
  ::google::protobuf::int32 grid_type() const;
  void set_grid_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetProto.ViewGrid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::NetProto::PBVector2* center_;
  ::google::protobuf::int32 grid_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ViewSnapshotDiff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.ViewSnapshotDiff) */ {
 public:
  ViewSnapshotDiff();
  virtual ~ViewSnapshotDiff();

  ViewSnapshotDiff(const ViewSnapshotDiff& from);

  inline ViewSnapshotDiff& operator=(const ViewSnapshotDiff& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ViewSnapshotDiff(ViewSnapshotDiff&& from) noexcept
    : ViewSnapshotDiff() {
    *this = ::std::move(from);
  }

  inline ViewSnapshotDiff& operator=(ViewSnapshotDiff&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewSnapshotDiff& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ViewSnapshotDiff* internal_default_instance() {
    return reinterpret_cast<const ViewSnapshotDiff*>(
               &_ViewSnapshotDiff_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ViewSnapshotDiff* other);
  void Swap(ViewSnapshotDiff* other);
  friend void swap(ViewSnapshotDiff& a, ViewSnapshotDiff& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ViewSnapshotDiff* New() const final {
    return CreateMaybeMessage<ViewSnapshotDiff>(NULL);
  }

  ViewSnapshotDiff* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ViewSnapshotDiff>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ViewSnapshotDiff& from);
  void MergeFrom(const ViewSnapshotDiff& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewSnapshotDiff* other);
  protected:
  explicit ViewSnapshotDiff(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 more_grids = 1;
  int more_grids_size() const;
  void clear_more_grids();
  static const int kMoreGridsFieldNumber = 1;
  ::google::protobuf::int32 more_grids(int index) const;
  void set_more_grids(int index, ::google::protobuf::int32 value);
  void add_more_grids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      more_grids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_more_grids();

  // repeated int32 miss_grids = 2;
  int miss_grids_size() const;
  void clear_miss_grids();
  static const int kMissGridsFieldNumber = 2;
  ::google::protobuf::int32 miss_grids(int index) const;
  void set_miss_grids(int index, ::google::protobuf::int32 value);
  void add_miss_grids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      miss_grids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_miss_grids();

  // @@protoc_insertion_point(class_scope:NetProto.ViewSnapshotDiff)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > more_grids_;
  mutable int _more_grids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > miss_grids_;
  mutable int _miss_grids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ViewSnapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.ViewSnapshot) */ {
 public:
  ViewSnapshot();
  virtual ~ViewSnapshot();

  ViewSnapshot(const ViewSnapshot& from);

  inline ViewSnapshot& operator=(const ViewSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ViewSnapshot(ViewSnapshot&& from) noexcept
    : ViewSnapshot() {
    *this = ::std::move(from);
  }

  inline ViewSnapshot& operator=(ViewSnapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewSnapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ViewSnapshot* internal_default_instance() {
    return reinterpret_cast<const ViewSnapshot*>(
               &_ViewSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(ViewSnapshot* other);
  void Swap(ViewSnapshot* other);
  friend void swap(ViewSnapshot& a, ViewSnapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ViewSnapshot* New() const final {
    return CreateMaybeMessage<ViewSnapshot>(NULL);
  }

  ViewSnapshot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ViewSnapshot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ViewSnapshot& from);
  void MergeFrom(const ViewSnapshot& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewSnapshot* other);
  protected:
  explicit ViewSnapshot(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 light_grids = 1;
  int light_grids_size() const;
  void clear_light_grids();
  static const int kLightGridsFieldNumber = 1;
  ::google::protobuf::int32 light_grids(int index) const;
  void set_light_grids(int index, ::google::protobuf::int32 value);
  void add_light_grids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      light_grids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_light_grids();

  // @@protoc_insertion_point(class_scope:NetProto.ViewSnapshot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > light_grids_;
  mutable int _light_grids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ViewAllGrids : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.ViewAllGrids) */ {
 public:
  ViewAllGrids();
  virtual ~ViewAllGrids();

  ViewAllGrids(const ViewAllGrids& from);

  inline ViewAllGrids& operator=(const ViewAllGrids& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ViewAllGrids(ViewAllGrids&& from) noexcept
    : ViewAllGrids() {
    *this = ::std::move(from);
  }

  inline ViewAllGrids& operator=(ViewAllGrids&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewAllGrids& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ViewAllGrids* internal_default_instance() {
    return reinterpret_cast<const ViewAllGrids*>(
               &_ViewAllGrids_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(ViewAllGrids* other);
  void Swap(ViewAllGrids* other);
  friend void swap(ViewAllGrids& a, ViewAllGrids& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ViewAllGrids* New() const final {
    return CreateMaybeMessage<ViewAllGrids>(NULL);
  }

  ViewAllGrids* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ViewAllGrids>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ViewAllGrids& from);
  void MergeFrom(const ViewAllGrids& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewAllGrids* other);
  protected:
  explicit ViewAllGrids(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.ViewGrid grids = 4;
  int grids_size() const;
  void clear_grids();
  static const int kGridsFieldNumber = 4;
  ::NetProto::ViewGrid* mutable_grids(int index);
  ::google::protobuf::RepeatedPtrField< ::NetProto::ViewGrid >*
      mutable_grids();
  const ::NetProto::ViewGrid& grids(int index) const;
  ::NetProto::ViewGrid* add_grids();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::ViewGrid >&
      grids() const;

  // float grid_size = 1;
  void clear_grid_size();
  static const int kGridSizeFieldNumber = 1;
  float grid_size() const;
  void set_grid_size(float value);

  // int32 row = 2;
  void clear_row();
  static const int kRowFieldNumber = 2;
  ::google::protobuf::int32 row() const;
  void set_row(::google::protobuf::int32 value);

  // int32 col = 3;
  void clear_col();
  static const int kColFieldNumber = 3;
  ::google::protobuf::int32 col() const;
  void set_col(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetProto.ViewAllGrids)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::ViewGrid > grids_;
  float grid_size_;
  ::google::protobuf::int32 row_;
  ::google::protobuf::int32 col_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneUnitState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SceneUnitState) */ {
 public:
  SceneUnitState();
  virtual ~SceneUnitState();

  SceneUnitState(const SceneUnitState& from);

  inline SceneUnitState& operator=(const SceneUnitState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneUnitState(SceneUnitState&& from) noexcept
    : SceneUnitState() {
    *this = ::std::move(from);
  }

  inline SceneUnitState& operator=(SceneUnitState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneUnitState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneUnitState* internal_default_instance() {
    return reinterpret_cast<const SceneUnitState*>(
               &_SceneUnitState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(SceneUnitState* other);
  void Swap(SceneUnitState* other);
  friend void swap(SceneUnitState& a, SceneUnitState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneUnitState* New() const final {
    return CreateMaybeMessage<SceneUnitState>(NULL);
  }

  SceneUnitState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SceneUnitState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SceneUnitState& from);
  void MergeFrom(const SceneUnitState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SceneUnitState* other);
  protected:
  explicit SceneUnitState(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.PBVector3 pos = 4;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  private:
  const ::NetProto::PBVector3& _internal_pos() const;
  public:
  const ::NetProto::PBVector3& pos() const;
  ::NetProto::PBVector3* release_pos();
  ::NetProto::PBVector3* mutable_pos();
  void set_allocated_pos(::NetProto::PBVector3* pos);
  void unsafe_arena_set_allocated_pos(
      ::NetProto::PBVector3* pos);
  ::NetProto::PBVector3* unsafe_arena_release_pos();

  // uint64 su_id = 1;
  void clear_su_id();
  static const int kSuIdFieldNumber = 1;
  ::google::protobuf::uint64 su_id() const;
  void set_su_id(::google::protobuf::uint64 value);

  // int32 unit_type = 2;
  void clear_unit_type();
  static const int kUnitTypeFieldNumber = 2;
  ::google::protobuf::int32 unit_type() const;
  void set_unit_type(::google::protobuf::int32 value);

  // int32 model_id = 3;
  void clear_model_id();
  static const int kModelIdFieldNumber = 3;
  ::google::protobuf::int32 model_id() const;
  void set_model_id(::google::protobuf::int32 value);

  // uint64 parent_su_id = 6;
  void clear_parent_su_id();
  static const int kParentSuIdFieldNumber = 6;
  ::google::protobuf::uint64 parent_su_id() const;
  void set_parent_su_id(::google::protobuf::uint64 value);

  // float face_dir = 5;
  void clear_face_dir();
  static const int kFaceDirFieldNumber = 5;
  float face_dir() const;
  void set_face_dir(float value);

  // @@protoc_insertion_point(class_scope:NetProto.SceneUnitState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::NetProto::PBVector3* pos_;
  ::google::protobuf::uint64 su_id_;
  ::google::protobuf::int32 unit_type_;
  ::google::protobuf::int32 model_id_;
  ::google::protobuf::uint64 parent_su_id_;
  float face_dir_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneUnitTransform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SceneUnitTransform) */ {
 public:
  SceneUnitTransform();
  virtual ~SceneUnitTransform();

  SceneUnitTransform(const SceneUnitTransform& from);

  inline SceneUnitTransform& operator=(const SceneUnitTransform& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneUnitTransform(SceneUnitTransform&& from) noexcept
    : SceneUnitTransform() {
    *this = ::std::move(from);
  }

  inline SceneUnitTransform& operator=(SceneUnitTransform&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneUnitTransform& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneUnitTransform* internal_default_instance() {
    return reinterpret_cast<const SceneUnitTransform*>(
               &_SceneUnitTransform_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(SceneUnitTransform* other);
  void Swap(SceneUnitTransform* other);
  friend void swap(SceneUnitTransform& a, SceneUnitTransform& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneUnitTransform* New() const final {
    return CreateMaybeMessage<SceneUnitTransform>(NULL);
  }

  SceneUnitTransform* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SceneUnitTransform>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SceneUnitTransform& from);
  void MergeFrom(const SceneUnitTransform& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SceneUnitTransform* other);
  protected:
  explicit SceneUnitTransform(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.PBVector3 pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  private:
  const ::NetProto::PBVector3& _internal_pos() const;
  public:
  const ::NetProto::PBVector3& pos() const;
  ::NetProto::PBVector3* release_pos();
  ::NetProto::PBVector3* mutable_pos();
  void set_allocated_pos(::NetProto::PBVector3* pos);
  void unsafe_arena_set_allocated_pos(
      ::NetProto::PBVector3* pos);
  ::NetProto::PBVector3* unsafe_arena_release_pos();

  // uint64 su_id = 1;
  void clear_su_id();
  static const int kSuIdFieldNumber = 1;
  ::google::protobuf::uint64 su_id() const;
  void set_su_id(::google::protobuf::uint64 value);

  // uint64 parent_su_id = 4;
  void clear_parent_su_id();
  static const int kParentSuIdFieldNumber = 4;
  ::google::protobuf::uint64 parent_su_id() const;
  void set_parent_su_id(::google::protobuf::uint64 value);

  // float face_dir = 3;
  void clear_face_dir();
  static const int kFaceDirFieldNumber = 3;
  float face_dir() const;
  void set_face_dir(float value);

  // @@protoc_insertion_point(class_scope:NetProto.SceneUnitTransform)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::NetProto::PBVector3* pos_;
  ::google::protobuf::uint64 su_id_;
  ::google::protobuf::uint64 parent_su_id_;
  float face_dir_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneUnitMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SceneUnitMove) */ {
 public:
  SceneUnitMove();
  virtual ~SceneUnitMove();

  SceneUnitMove(const SceneUnitMove& from);

  inline SceneUnitMove& operator=(const SceneUnitMove& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneUnitMove(SceneUnitMove&& from) noexcept
    : SceneUnitMove() {
    *this = ::std::move(from);
  }

  inline SceneUnitMove& operator=(SceneUnitMove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneUnitMove& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneUnitMove* internal_default_instance() {
    return reinterpret_cast<const SceneUnitMove*>(
               &_SceneUnitMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(SceneUnitMove* other);
  void Swap(SceneUnitMove* other);
  friend void swap(SceneUnitMove& a, SceneUnitMove& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneUnitMove* New() const final {
    return CreateMaybeMessage<SceneUnitMove>(NULL);
  }

  SceneUnitMove* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SceneUnitMove>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SceneUnitMove& from);
  void MergeFrom(const SceneUnitMove& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SceneUnitMove* other);
  protected:
  explicit SceneUnitMove(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 su_id = 1;
  void clear_su_id();
  static const int kSuIdFieldNumber = 1;
  ::google::protobuf::uint64 su_id() const;
  void set_su_id(::google::protobuf::uint64 value);

  // .NetProto.EMoveAgentState move_agent_state = 2;
  void clear_move_agent_state();
  static const int kMoveAgentStateFieldNumber = 2;
  ::NetProto::EMoveAgentState move_agent_state() const;
  void set_move_agent_state(::NetProto::EMoveAgentState value);

  // @@protoc_insertion_point(class_scope:NetProto.SceneUnitMove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint64 su_id_;
  int move_agent_state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneUnitSkillAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SceneUnitSkillAction) */ {
 public:
  SceneUnitSkillAction();
  virtual ~SceneUnitSkillAction();

  SceneUnitSkillAction(const SceneUnitSkillAction& from);

  inline SceneUnitSkillAction& operator=(const SceneUnitSkillAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneUnitSkillAction(SceneUnitSkillAction&& from) noexcept
    : SceneUnitSkillAction() {
    *this = ::std::move(from);
  }

  inline SceneUnitSkillAction& operator=(SceneUnitSkillAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneUnitSkillAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneUnitSkillAction* internal_default_instance() {
    return reinterpret_cast<const SceneUnitSkillAction*>(
               &_SceneUnitSkillAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(SceneUnitSkillAction* other);
  void Swap(SceneUnitSkillAction* other);
  friend void swap(SceneUnitSkillAction& a, SceneUnitSkillAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneUnitSkillAction* New() const final {
    return CreateMaybeMessage<SceneUnitSkillAction>(NULL);
  }

  SceneUnitSkillAction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SceneUnitSkillAction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SceneUnitSkillAction& from);
  void MergeFrom(const SceneUnitSkillAction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SceneUnitSkillAction* other);
  protected:
  explicit SceneUnitSkillAction(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 su_id = 1;
  void clear_su_id();
  static const int kSuIdFieldNumber = 1;
  ::google::protobuf::uint64 su_id() const;
  void set_su_id(::google::protobuf::uint64 value);

  // .NetProto.ESkillState stage = 2;
  void clear_stage();
  static const int kStageFieldNumber = 2;
  ::NetProto::ESkillState stage() const;
  void set_stage(::NetProto::ESkillState value);

  // int32 skill_id = 3;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 3;
  ::google::protobuf::int32 skill_id() const;
  void set_skill_id(::google::protobuf::int32 value);

  // int64 stage_begin_ms = 4;
  void clear_stage_begin_ms();
  static const int kStageBeginMsFieldNumber = 4;
  ::google::protobuf::int64 stage_begin_ms() const;
  void set_stage_begin_ms(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:NetProto.SceneUnitSkillAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint64 su_id_;
  int stage_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int64 stage_begin_ms_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Battle_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RspFreeHero

// uint64 red_hero_id = 1;
inline void RspFreeHero::clear_red_hero_id() {
  red_hero_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RspFreeHero::red_hero_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RspFreeHero.red_hero_id)
  return red_hero_id_;
}
inline void RspFreeHero::set_red_hero_id(::google::protobuf::uint64 value) {
  
  red_hero_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RspFreeHero.red_hero_id)
}

// uint64 blue_hero_id = 2;
inline void RspFreeHero::clear_blue_hero_id() {
  blue_hero_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RspFreeHero::blue_hero_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RspFreeHero.blue_hero_id)
  return blue_hero_id_;
}
inline void RspFreeHero::set_blue_hero_id(::google::protobuf::uint64 value) {
  
  blue_hero_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RspFreeHero.blue_hero_id)
}

// -------------------------------------------------------------------

// SelectHeroReq

// uint64 hero_id = 1;
inline void SelectHeroReq::clear_hero_id() {
  hero_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SelectHeroReq::hero_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SelectHeroReq.hero_id)
  return hero_id_;
}
inline void SelectHeroReq::set_hero_id(::google::protobuf::uint64 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SelectHeroReq.hero_id)
}

// -------------------------------------------------------------------

// SelectHeroRsp

// uint64 hero_id = 1;
inline void SelectHeroRsp::clear_hero_id() {
  hero_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SelectHeroRsp::hero_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SelectHeroRsp.hero_id)
  return hero_id_;
}
inline void SelectHeroRsp::set_hero_id(::google::protobuf::uint64 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SelectHeroRsp.hero_id)
}

// bool is_succ = 2;
inline void SelectHeroRsp::clear_is_succ() {
  is_succ_ = false;
}
inline bool SelectHeroRsp::is_succ() const {
  // @@protoc_insertion_point(field_get:NetProto.SelectHeroRsp.is_succ)
  return is_succ_;
}
inline void SelectHeroRsp::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SelectHeroRsp.is_succ)
}

// -------------------------------------------------------------------

// SceneObjectDisappear

// repeated uint64 objids = 1;
inline int SceneObjectDisappear::objids_size() const {
  return objids_.size();
}
inline void SceneObjectDisappear::clear_objids() {
  objids_.Clear();
}
inline ::google::protobuf::uint64 SceneObjectDisappear::objids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.SceneObjectDisappear.objids)
  return objids_.Get(index);
}
inline void SceneObjectDisappear::set_objids(int index, ::google::protobuf::uint64 value) {
  objids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetProto.SceneObjectDisappear.objids)
}
inline void SceneObjectDisappear::add_objids(::google::protobuf::uint64 value) {
  objids_.Add(value);
  // @@protoc_insertion_point(field_add:NetProto.SceneObjectDisappear.objids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SceneObjectDisappear::objids() const {
  // @@protoc_insertion_point(field_list:NetProto.SceneObjectDisappear.objids)
  return objids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SceneObjectDisappear::mutable_objids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.SceneObjectDisappear.objids)
  return &objids_;
}

// -------------------------------------------------------------------

// MoveToPos

// .NetProto.PBVector2 pos = 1;
inline bool MoveToPos::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline const ::NetProto::PBVector2& MoveToPos::_internal_pos() const {
  return *pos_;
}
inline const ::NetProto::PBVector2& MoveToPos::pos() const {
  const ::NetProto::PBVector2* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.MoveToPos.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector2*>(
      &::NetProto::_PBVector2_default_instance_);
}
inline ::NetProto::PBVector2* MoveToPos::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.MoveToPos.pos)
  
  ::NetProto::PBVector2* temp = pos_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  pos_ = NULL;
  return temp;
}
inline ::NetProto::PBVector2* MoveToPos::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.MoveToPos.pos)
  
  ::NetProto::PBVector2* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::NetProto::PBVector2* MoveToPos::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::NetProto::PBVector2>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MoveToPos.pos)
  return pos_;
}
inline void MoveToPos::set_allocated_pos(::NetProto::PBVector2* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_);
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(pos)->GetArena();
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:NetProto.MoveToPos.pos)
}

// -------------------------------------------------------------------

// BattleOperation

// .NetProto.EPlayerOpera opera = 1;
inline void BattleOperation::clear_opera() {
  opera_ = 0;
}
inline ::NetProto::EPlayerOpera BattleOperation::opera() const {
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.opera)
  return static_cast< ::NetProto::EPlayerOpera >(opera_);
}
inline void BattleOperation::set_opera(::NetProto::EPlayerOpera value) {
  
  opera_ = value;
  // @@protoc_insertion_point(field_set:NetProto.BattleOperation.opera)
}

// uint64 target_id = 2;
inline void BattleOperation::clear_target_id() {
  target_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BattleOperation::target_id() const {
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.target_id)
  return target_id_;
}
inline void BattleOperation::set_target_id(::google::protobuf::uint64 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.BattleOperation.target_id)
}

// float dir = 3;
inline void BattleOperation::clear_dir() {
  dir_ = 0;
}
inline float BattleOperation::dir() const {
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.dir)
  return dir_;
}
inline void BattleOperation::set_dir(float value) {
  
  dir_ = value;
  // @@protoc_insertion_point(field_set:NetProto.BattleOperation.dir)
}

// .NetProto.PBVector2 pos = 4;
inline bool BattleOperation::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline const ::NetProto::PBVector2& BattleOperation::_internal_pos() const {
  return *pos_;
}
inline const ::NetProto::PBVector2& BattleOperation::pos() const {
  const ::NetProto::PBVector2* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector2*>(
      &::NetProto::_PBVector2_default_instance_);
}
inline ::NetProto::PBVector2* BattleOperation::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.BattleOperation.pos)
  
  ::NetProto::PBVector2* temp = pos_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  pos_ = NULL;
  return temp;
}
inline ::NetProto::PBVector2* BattleOperation::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.BattleOperation.pos)
  
  ::NetProto::PBVector2* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::NetProto::PBVector2* BattleOperation::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::NetProto::PBVector2>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.BattleOperation.pos)
  return pos_;
}
inline void BattleOperation::set_allocated_pos(::NetProto::PBVector2* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_);
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(pos)->GetArena();
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:NetProto.BattleOperation.pos)
}

// .NetProto.ESkillSlot skill_slot = 5;
inline void BattleOperation::clear_skill_slot() {
  skill_slot_ = 0;
}
inline ::NetProto::ESkillSlot BattleOperation::skill_slot() const {
  // @@protoc_insertion_point(field_get:NetProto.BattleOperation.skill_slot)
  return static_cast< ::NetProto::ESkillSlot >(skill_slot_);
}
inline void BattleOperation::set_skill_slot(::NetProto::ESkillSlot value) {
  
  skill_slot_ = value;
  // @@protoc_insertion_point(field_set:NetProto.BattleOperation.skill_slot)
}

// -------------------------------------------------------------------

// ViewGrid

// .NetProto.PBVector2 center = 1;
inline bool ViewGrid::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline const ::NetProto::PBVector2& ViewGrid::_internal_center() const {
  return *center_;
}
inline const ::NetProto::PBVector2& ViewGrid::center() const {
  const ::NetProto::PBVector2* p = center_;
  // @@protoc_insertion_point(field_get:NetProto.ViewGrid.center)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector2*>(
      &::NetProto::_PBVector2_default_instance_);
}
inline ::NetProto::PBVector2* ViewGrid::release_center() {
  // @@protoc_insertion_point(field_release:NetProto.ViewGrid.center)
  
  ::NetProto::PBVector2* temp = center_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  center_ = NULL;
  return temp;
}
inline ::NetProto::PBVector2* ViewGrid::unsafe_arena_release_center() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.ViewGrid.center)
  
  ::NetProto::PBVector2* temp = center_;
  center_ = NULL;
  return temp;
}
inline ::NetProto::PBVector2* ViewGrid::mutable_center() {
  
  if (center_ == NULL) {
    auto* p = CreateMaybeMessage<::NetProto::PBVector2>(GetArenaNoVirtual());
    center_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.ViewGrid.center)
  return center_;
}
inline void ViewGrid::set_allocated_center(::NetProto::PBVector2* center) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(center_);
  }
  if (center) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(center)->GetArena();
    if (message_arena != submessage_arena) {
      center = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, center, submessage_arena);
    }
    
  } else {
    
  }
  center_ = center;
  // @@protoc_insertion_point(field_set_allocated:NetProto.ViewGrid.center)
}

// int32 grid_type = 2;
inline void ViewGrid::clear_grid_type() {
  grid_type_ = 0;
}
inline ::google::protobuf::int32 ViewGrid::grid_type() const {
  // @@protoc_insertion_point(field_get:NetProto.ViewGrid.grid_type)
  return grid_type_;
}
inline void ViewGrid::set_grid_type(::google::protobuf::int32 value) {
  
  grid_type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ViewGrid.grid_type)
}

// -------------------------------------------------------------------

// ViewSnapshotDiff

// repeated int32 more_grids = 1;
inline int ViewSnapshotDiff::more_grids_size() const {
  return more_grids_.size();
}
inline void ViewSnapshotDiff::clear_more_grids() {
  more_grids_.Clear();
}
inline ::google::protobuf::int32 ViewSnapshotDiff::more_grids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.ViewSnapshotDiff.more_grids)
  return more_grids_.Get(index);
}
inline void ViewSnapshotDiff::set_more_grids(int index, ::google::protobuf::int32 value) {
  more_grids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetProto.ViewSnapshotDiff.more_grids)
}
inline void ViewSnapshotDiff::add_more_grids(::google::protobuf::int32 value) {
  more_grids_.Add(value);
  // @@protoc_insertion_point(field_add:NetProto.ViewSnapshotDiff.more_grids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ViewSnapshotDiff::more_grids() const {
  // @@protoc_insertion_point(field_list:NetProto.ViewSnapshotDiff.more_grids)
  return more_grids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ViewSnapshotDiff::mutable_more_grids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.ViewSnapshotDiff.more_grids)
  return &more_grids_;
}

// repeated int32 miss_grids = 2;
inline int ViewSnapshotDiff::miss_grids_size() const {
  return miss_grids_.size();
}
inline void ViewSnapshotDiff::clear_miss_grids() {
  miss_grids_.Clear();
}
inline ::google::protobuf::int32 ViewSnapshotDiff::miss_grids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.ViewSnapshotDiff.miss_grids)
  return miss_grids_.Get(index);
}
inline void ViewSnapshotDiff::set_miss_grids(int index, ::google::protobuf::int32 value) {
  miss_grids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetProto.ViewSnapshotDiff.miss_grids)
}
inline void ViewSnapshotDiff::add_miss_grids(::google::protobuf::int32 value) {
  miss_grids_.Add(value);
  // @@protoc_insertion_point(field_add:NetProto.ViewSnapshotDiff.miss_grids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ViewSnapshotDiff::miss_grids() const {
  // @@protoc_insertion_point(field_list:NetProto.ViewSnapshotDiff.miss_grids)
  return miss_grids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ViewSnapshotDiff::mutable_miss_grids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.ViewSnapshotDiff.miss_grids)
  return &miss_grids_;
}

// -------------------------------------------------------------------

// ViewSnapshot

// repeated int32 light_grids = 1;
inline int ViewSnapshot::light_grids_size() const {
  return light_grids_.size();
}
inline void ViewSnapshot::clear_light_grids() {
  light_grids_.Clear();
}
inline ::google::protobuf::int32 ViewSnapshot::light_grids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.ViewSnapshot.light_grids)
  return light_grids_.Get(index);
}
inline void ViewSnapshot::set_light_grids(int index, ::google::protobuf::int32 value) {
  light_grids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetProto.ViewSnapshot.light_grids)
}
inline void ViewSnapshot::add_light_grids(::google::protobuf::int32 value) {
  light_grids_.Add(value);
  // @@protoc_insertion_point(field_add:NetProto.ViewSnapshot.light_grids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ViewSnapshot::light_grids() const {
  // @@protoc_insertion_point(field_list:NetProto.ViewSnapshot.light_grids)
  return light_grids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ViewSnapshot::mutable_light_grids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.ViewSnapshot.light_grids)
  return &light_grids_;
}

// -------------------------------------------------------------------

// ViewAllGrids

// float grid_size = 1;
inline void ViewAllGrids::clear_grid_size() {
  grid_size_ = 0;
}
inline float ViewAllGrids::grid_size() const {
  // @@protoc_insertion_point(field_get:NetProto.ViewAllGrids.grid_size)
  return grid_size_;
}
inline void ViewAllGrids::set_grid_size(float value) {
  
  grid_size_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ViewAllGrids.grid_size)
}

// int32 row = 2;
inline void ViewAllGrids::clear_row() {
  row_ = 0;
}
inline ::google::protobuf::int32 ViewAllGrids::row() const {
  // @@protoc_insertion_point(field_get:NetProto.ViewAllGrids.row)
  return row_;
}
inline void ViewAllGrids::set_row(::google::protobuf::int32 value) {
  
  row_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ViewAllGrids.row)
}

// int32 col = 3;
inline void ViewAllGrids::clear_col() {
  col_ = 0;
}
inline ::google::protobuf::int32 ViewAllGrids::col() const {
  // @@protoc_insertion_point(field_get:NetProto.ViewAllGrids.col)
  return col_;
}
inline void ViewAllGrids::set_col(::google::protobuf::int32 value) {
  
  col_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ViewAllGrids.col)
}

// repeated .NetProto.ViewGrid grids = 4;
inline int ViewAllGrids::grids_size() const {
  return grids_.size();
}
inline void ViewAllGrids::clear_grids() {
  grids_.Clear();
}
inline ::NetProto::ViewGrid* ViewAllGrids::mutable_grids(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.ViewAllGrids.grids)
  return grids_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::ViewGrid >*
ViewAllGrids::mutable_grids() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.ViewAllGrids.grids)
  return &grids_;
}
inline const ::NetProto::ViewGrid& ViewAllGrids::grids(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.ViewAllGrids.grids)
  return grids_.Get(index);
}
inline ::NetProto::ViewGrid* ViewAllGrids::add_grids() {
  // @@protoc_insertion_point(field_add:NetProto.ViewAllGrids.grids)
  return grids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::ViewGrid >&
ViewAllGrids::grids() const {
  // @@protoc_insertion_point(field_list:NetProto.ViewAllGrids.grids)
  return grids_;
}

// -------------------------------------------------------------------

// SceneUnitState

// uint64 su_id = 1;
inline void SceneUnitState::clear_su_id() {
  su_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneUnitState::su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.su_id)
  return su_id_;
}
inline void SceneUnitState::set_su_id(::google::protobuf::uint64 value) {
  
  su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.su_id)
}

// int32 unit_type = 2;
inline void SceneUnitState::clear_unit_type() {
  unit_type_ = 0;
}
inline ::google::protobuf::int32 SceneUnitState::unit_type() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.unit_type)
  return unit_type_;
}
inline void SceneUnitState::set_unit_type(::google::protobuf::int32 value) {
  
  unit_type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.unit_type)
}

// int32 model_id = 3;
inline void SceneUnitState::clear_model_id() {
  model_id_ = 0;
}
inline ::google::protobuf::int32 SceneUnitState::model_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.model_id)
  return model_id_;
}
inline void SceneUnitState::set_model_id(::google::protobuf::int32 value) {
  
  model_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.model_id)
}

// .NetProto.PBVector3 pos = 4;
inline bool SceneUnitState::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline const ::NetProto::PBVector3& SceneUnitState::_internal_pos() const {
  return *pos_;
}
inline const ::NetProto::PBVector3& SceneUnitState::pos() const {
  const ::NetProto::PBVector3* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector3*>(
      &::NetProto::_PBVector3_default_instance_);
}
inline ::NetProto::PBVector3* SceneUnitState::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.SceneUnitState.pos)
  
  ::NetProto::PBVector3* temp = pos_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  pos_ = NULL;
  return temp;
}
inline ::NetProto::PBVector3* SceneUnitState::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.SceneUnitState.pos)
  
  ::NetProto::PBVector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::NetProto::PBVector3* SceneUnitState::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::NetProto::PBVector3>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.SceneUnitState.pos)
  return pos_;
}
inline void SceneUnitState::set_allocated_pos(::NetProto::PBVector3* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_);
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(pos)->GetArena();
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneUnitState.pos)
}

// float face_dir = 5;
inline void SceneUnitState::clear_face_dir() {
  face_dir_ = 0;
}
inline float SceneUnitState::face_dir() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.face_dir)
  return face_dir_;
}
inline void SceneUnitState::set_face_dir(float value) {
  
  face_dir_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.face_dir)
}

// uint64 parent_su_id = 6;
inline void SceneUnitState::clear_parent_su_id() {
  parent_su_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneUnitState::parent_su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitState.parent_su_id)
  return parent_su_id_;
}
inline void SceneUnitState::set_parent_su_id(::google::protobuf::uint64 value) {
  
  parent_su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitState.parent_su_id)
}

// -------------------------------------------------------------------

// SceneUnitTransform

// uint64 su_id = 1;
inline void SceneUnitTransform::clear_su_id() {
  su_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneUnitTransform::su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitTransform.su_id)
  return su_id_;
}
inline void SceneUnitTransform::set_su_id(::google::protobuf::uint64 value) {
  
  su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitTransform.su_id)
}

// .NetProto.PBVector3 pos = 2;
inline bool SceneUnitTransform::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline const ::NetProto::PBVector3& SceneUnitTransform::_internal_pos() const {
  return *pos_;
}
inline const ::NetProto::PBVector3& SceneUnitTransform::pos() const {
  const ::NetProto::PBVector3* p = pos_;
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitTransform.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::NetProto::PBVector3*>(
      &::NetProto::_PBVector3_default_instance_);
}
inline ::NetProto::PBVector3* SceneUnitTransform::release_pos() {
  // @@protoc_insertion_point(field_release:NetProto.SceneUnitTransform.pos)
  
  ::NetProto::PBVector3* temp = pos_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  pos_ = NULL;
  return temp;
}
inline ::NetProto::PBVector3* SceneUnitTransform::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NetProto.SceneUnitTransform.pos)
  
  ::NetProto::PBVector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::NetProto::PBVector3* SceneUnitTransform::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::NetProto::PBVector3>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.SceneUnitTransform.pos)
  return pos_;
}
inline void SceneUnitTransform::set_allocated_pos(::NetProto::PBVector3* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_);
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(pos)->GetArena();
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneUnitTransform.pos)
}

// float face_dir = 3;
inline void SceneUnitTransform::clear_face_dir() {
  face_dir_ = 0;
}
inline float SceneUnitTransform::face_dir() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitTransform.face_dir)
  return face_dir_;
}
inline void SceneUnitTransform::set_face_dir(float value) {
  
  face_dir_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitTransform.face_dir)
}

// uint64 parent_su_id = 4;
inline void SceneUnitTransform::clear_parent_su_id() {
  parent_su_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneUnitTransform::parent_su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitTransform.parent_su_id)
  return parent_su_id_;
}
inline void SceneUnitTransform::set_parent_su_id(::google::protobuf::uint64 value) {
  
  parent_su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitTransform.parent_su_id)
}

// -------------------------------------------------------------------

// SceneUnitMove

// uint64 su_id = 1;
inline void SceneUnitMove::clear_su_id() {
  su_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneUnitMove::su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitMove.su_id)
  return su_id_;
}
inline void SceneUnitMove::set_su_id(::google::protobuf::uint64 value) {
  
  su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitMove.su_id)
}

// .NetProto.EMoveAgentState move_agent_state = 2;
inline void SceneUnitMove::clear_move_agent_state() {
  move_agent_state_ = 0;
}
inline ::NetProto::EMoveAgentState SceneUnitMove::move_agent_state() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitMove.move_agent_state)
  return static_cast< ::NetProto::EMoveAgentState >(move_agent_state_);
}
inline void SceneUnitMove::set_move_agent_state(::NetProto::EMoveAgentState value) {
  
  move_agent_state_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitMove.move_agent_state)
}

// -------------------------------------------------------------------

// SceneUnitSkillAction

// uint64 su_id = 1;
inline void SceneUnitSkillAction::clear_su_id() {
  su_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneUnitSkillAction::su_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitSkillAction.su_id)
  return su_id_;
}
inline void SceneUnitSkillAction::set_su_id(::google::protobuf::uint64 value) {
  
  su_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitSkillAction.su_id)
}

// .NetProto.ESkillState stage = 2;
inline void SceneUnitSkillAction::clear_stage() {
  stage_ = 0;
}
inline ::NetProto::ESkillState SceneUnitSkillAction::stage() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitSkillAction.stage)
  return static_cast< ::NetProto::ESkillState >(stage_);
}
inline void SceneUnitSkillAction::set_stage(::NetProto::ESkillState value) {
  
  stage_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitSkillAction.stage)
}

// int32 skill_id = 3;
inline void SceneUnitSkillAction::clear_skill_id() {
  skill_id_ = 0;
}
inline ::google::protobuf::int32 SceneUnitSkillAction::skill_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitSkillAction.skill_id)
  return skill_id_;
}
inline void SceneUnitSkillAction::set_skill_id(::google::protobuf::int32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitSkillAction.skill_id)
}

// int64 stage_begin_ms = 4;
inline void SceneUnitSkillAction::clear_stage_begin_ms() {
  stage_begin_ms_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SceneUnitSkillAction::stage_begin_ms() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneUnitSkillAction.stage_begin_ms)
  return stage_begin_ms_;
}
inline void SceneUnitSkillAction::set_stage_begin_ms(::google::protobuf::int64 value) {
  
  stage_begin_ms_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneUnitSkillAction.stage_begin_ms)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NetProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Battle_2eproto
