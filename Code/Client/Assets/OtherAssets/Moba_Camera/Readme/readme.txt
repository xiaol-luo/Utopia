Moba Camera Script v1.1created by Jacob Penner 2013Basic SetupThe basic setup for the moba camera requires a main pivot(Empty Gameobject), an offset(Empty Gameobject), and a camera. The parenting order that is required is the Camera parented to the Offset which is parented to the Pivot.			In the Inspector pass the pivot, offset, camera through the Moba_CameraÕs corresponding inputs under the requirements tab.Add a new Layer named "mobaCameraBoundaryLayer". Then under ( Edit >> Project Settings >> Physics )turn off all interactions with the other layers.(Recommended) Attach the Moba_Camera script to the pivot for easy access from the hierarchy.Input Managers Required AxesScript requires axes to be added to the InputManager (Edit >> ProjectSettings >> Input)-if the axes are not in the InputManager add the followingor change the name in the script in the corresponding inputs.Needs to be createdMoba Rotate Camera 				Moba Lock Camera  Name: 		Moba Rotate Camera  		Name: 		Moba Lock Camera  Positive Button:  mouse 2 			Positive Button: 	l   Type: 		Key or Mouse Button		Type: 		Key or Mouse Button  Moba Char Focus: 				Moba Camera Move Left  Name: 		Moba Char Focus 		Name: 		Moba Camera Move Left   Positive Button:  space  				Positive Button:	left  Type: 		Key or Mouse Button	 	Type: 		Key or Mouse Button    Moba Camera Move Right				Moba Camera Move Forward  Name: 		Moba Camera Move Right 		Name: 		Moba Camera Move Forward  Positive Button: 	right				Positive Button:	up   Type: 		Key or Mouse Button		Type: 		Key or Mouse Button  Moba Camera Move Backward  Name: 		Moba Camera Move Backward   Positive Button:	down    Type: 		Key or Mouse ButtonInput Managers Required AxesShould be already created.Mouse X				Mouse YName: 		Mouse X			Name: 		Mouse YGravity: 		0			Gravity: 		0Dead:		0			Dead:		0Sensitivity: 	0.1			Sensitivity:  	0.1Snap:  		uncheck			Snap:  		uncheckInvert: 		uncheck			Invert: 		uncheckType: 		Mouse Movement		Type: 		Mouse MovementAxis: 		X axis			Axis: 		Y axisJoy: Num: 	Get Motion from all	Joy: Num: 	Get Motion from allMouse ScrollWheelName: 		Mouse ScrollWheelGravity: 		0Dead:		0Sensitivity:  	0.1Snap:  		uncheckInvert: 		uncheckType: 		Mouse MovementAxis: 		3rd axis(Joysticks and ScrollWheel)Joy: Num: 	Get Motion from allBoundary setupHow to create a boundary object:(1) Create an Empty GameObject(2) Attach either a Box Collider or a Sphere Collider(3) Attach the Moba_Camera_Boundary to the created GameObject	- Under the Moba_Camera_Boundary in the Inspector Change the Type 	to either cube or sphere depending on which Collider type was chosen.(4) To Scale the use the Size(x,y,z) in the Box Collider or the Radius       in the Sphere Collider-- Boundaries only support uniformed scaled sheres, adjust the size of the sphereby changing the radius value on the sphere collider.-- Boundary Prefabs are in the Moba_Camera/Prefabs folder-- Boundaries are now automaticly added, no dragging to a list****RECOMMENDED NOT TO USE THE TRANSFORM SCALE WITH SPHERES****ControlsAll controlls can be changed through the script in the inspector under the inputs/keycodes or inputs/axisCan toggle on or off the keycodes for axes in the inspectorDEFUALT SETTINGSMoving the camera's position- hovering the mouse over the edge of the screen - Using the Arrow keysRotate the camera- hold middle mouse button and moving the mouseLock camera to Target- Press L to toggle being locked to target- Hold Space to be locked to targetZoom Camera- Scroll the mouse wheelNotes:- Enabling useFixedUpdate may make the camera jumpy when being locked to a target (Maybe removed in later versions)Versionsv1.3  - Change code to allow script to work when input manager was not yet setup,  only works when Inputs >> UseKeyCodeInputs is checked.  - Fixed camera prefab.v1.1   - Removed the boundary list from the MobaCamera script  - Created a separate static class that will contain all boundary and do calculations.  - Created a Boundary component that can be attach to a boundary that will automaticly add it to the boundary list  - Added cube boundaries are able to be rotated on their Y axis  - Boundaries can now be both cubes and spheres  - Added Axes and Buttons to use the Input Manager instead of KeyCodes  - Added Option to turn on and off use of KeyCodesv0.5  -Organized Code structure  -Fixed SetCameraRotation function  -Restrict Camera X rotation on range from -89 to 89  -Added property for currentCameraRotation  -Added property for currentCameraZoomAmount  -Can now set the CameraRotation and CameraZoomAmount at runtime with the corresponding properties v0.4  -Fixed issue with camera colliding with boundaries when locked to target v0.3  -Added boundaries  -Added defualt height value to camera  -Allow Camera to Change height value form defult to the locked target's height v0.2  -Changed Handling of Player Input with rotation  -Changed Handling of Player Input with zoom  -fix offset calculation for rotation 	  -Added Helper classes for better organization